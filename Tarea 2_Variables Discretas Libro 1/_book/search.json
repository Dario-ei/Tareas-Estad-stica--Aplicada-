[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Variables Aleatorias Discretas",
    "section": "",
    "text": "Contenido\n\n\nEste documento explora diferentes distribuciones de las variables aleatorias discretas más comunes; brindando sus definiciones, funciones de probabilidad, funciones de distribución, parámetros, parámetros estadísticos (media, varianza, desviación estándar), resultados importantes y ejemplos prácticos.\nInicialmente se enuncia el Teorema Central del Límite (TCL), que es fundamental para entender el comportamiento de las sumas y promedios de variables aleatorias en general (ya sean discretas o continuas). Luego, se presentan las siguientes distribuciones discretas:\n\nTCL\nDistribución Uniforme Discreta\nDistribuciones Bernoulli y Binomial\nGeometrica\nDistribución Binomial Negativa\nDistribución Hipergeométrica\nDistribución de Poisson\n\nAl final de cada sección se incluyen ejercicios que deben ser resueltos para reforzar el aprendizaje.\n\nReferencia:\n\nRincón, Luis (2014). Introducción a la Probabilidad. Facultad de Ciencias, UNAM.",
    "crumbs": [
      "Contenido"
    ]
  },
  {
    "objectID": "poisson.html",
    "href": "poisson.html",
    "title": "7  Distribución Poisson",
    "section": "",
    "text": "7.1 Introducción\nLa distribución de Poisson es una de las distribuciones de probabilidad discretas más importantes en estadística y tiene una amplia gama de aplicaciones en diversas disciplinas. Fue desarrollada por el matemático francés Siméon Denis Poisson en 1837 como una extensión del trabajo de Abraham de Moivre sobre la distribución binomial.\nEsta distribución es especialmente útil para modelar el número de eventos que ocurren en un intervalo fijo de tiempo, espacio, volumen, o cualquier otra unidad de medida, cuando estos eventos:",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Distribución Poisson</span>"
    ]
  },
  {
    "objectID": "poisson.html#introducción",
    "href": "poisson.html#introducción",
    "title": "7  Distribución Poisson",
    "section": "",
    "text": "Ocurren de manera independiente\nTienen una tasa promedio constante\nEs raro que ocurran múltiples eventos simultáneamente\n\n\n7.1.1 Aplicaciones Comunes\nLa distribución de Poisson se utiliza frecuentemente para modelar:\n\nLlegadas de clientes a un banco o restaurante por hora\nLlamadas telefónicas recibidas en un centro de atención por minuto\nDefectos de fabricación en un lote de productos\nAccidentes de tráfico en una intersección por día\nMutaciones genéticas en una secuencia de ADN\nPartículas radioactivas detectadas por un contador Geiger\nTerremotos en una región geográfica por año\n\nLa distribución de Poisson también surge como aproximación a la distribución binomial cuando \\(n\\) es grande y \\(p\\) es pequeño, manteniendo \\(np\\) constante.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Distribución Poisson</span>"
    ]
  },
  {
    "objectID": "poisson.html#definición",
    "href": "poisson.html#definición",
    "title": "7  Distribución Poisson",
    "section": "7.2 Definición",
    "text": "7.2 Definición\n\nDefinición 7.1 Una variable aleatoria \\(X\\) sigue una distribución de Poisson con parámetro \\(\\lambda\\) si cuenta el número de eventos que ocurren en un intervalo fijo, donde \\(\\lambda\\) representa la tasa promedio de ocurrencia de eventos en ese intervalo. La función de masa de probabilidad de la distribución de Poisson está dada por:\n\\[f(x)= \\frac{\\lambda^x e^{-\\lambda}}{x!}\\]\ndonde:\n\n\\(x = 0, 1, 2, 3, \\ldots\\) (número entero no negativo de eventos)\n\\(\\lambda &gt; 0\\) (parámetro de tasa)\n\\(e \\approx 2.71828\\) (base del logaritmo natural)\n\nA una variable aleatoria que sigue esta distribución se le denota como \\(X \\sim \\text{Poisson}(\\lambda)\\)",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Distribución Poisson</span>"
    ]
  },
  {
    "objectID": "poisson.html#características",
    "href": "poisson.html#características",
    "title": "7  Distribución Poisson",
    "section": "7.3 Características",
    "text": "7.3 Características\nParámetros\nLa distribución de Poisson tiene un único parámetro:\n\n\\(\\lambda\\) (lambda): Tasa promedio de eventos por unidad de medida (\\(\\lambda &gt; 0\\))\n\nTambién representa tanto la media como la varianza de la distribución\nEs un número real positivo\nSus unidades dependen del contexto (eventos/hora, defectos/lote, etc.)\n\n\nParámetros Estadísticos\nUna característica notable de la distribución de Poisson es que su media y varianza son iguales:\nMedia (Esperanza):\n\\[E(X) = \\lambda\\]\nVarianza:\n\\[\\text{Var}(X) = \\lambda\\]\nDesviación estándar:\n\\[\\sigma = \\sqrt{\\lambda}\\]\nCoeficiente de variación:\n\\[CV = \\frac{\\sigma}{\\mu} = \\frac{\\sqrt{\\lambda}}{\\lambda} = \\frac{1}{\\sqrt{\\lambda}}\\]\nFunción de Distribución (Probabilidad Acumulada)\nLa función de distribución acumulada (CDF) es:\n\\[F(x) = P(X \\leq x) = \\sum_{i=0}^{x} \\frac{\\lambda^i e^{-\\lambda}}{i!}\\]\nEsta suma no tiene una forma cerrada simple, por lo que generalmente se calcula numéricamente o se consulta en tablas estadísticas.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Distribución Poisson</span>"
    ]
  },
  {
    "objectID": "poisson.html#ejemplo-básico",
    "href": "poisson.html#ejemplo-básico",
    "title": "7  Distribución Poisson",
    "section": "7.4 Ejemplo Básico",
    "text": "7.4 Ejemplo Básico\nUn centro de atención telefónica recibe en promedio 4 llamadas por minuto. Suponiendo que las llamadas siguen un proceso de Poisson, responde las siguientes preguntas:\n\n¿Cuál es la probabilidad de recibir exactamente 6 llamadas en un minuto?\n¿Cuál es la probabilidad de no recibir ninguna llamada en un minuto?\n¿Cuál es la probabilidad de recibir 3 o menos llamadas en un minuto?\n\nIdentificación del modelo:\n\nVariable: \\(X\\) = número de llamadas por minuto\nDistribución: \\(X \\sim \\text{Poisson}(\\lambda = 4)\\)\n\n\n\nCódigo\n# Parámetro\nlambda &lt;- 4\n\n# a) P(X = 6)\nprob_6 &lt;- dpois(6, lambda)\ncat(\"a) P(X = 6) =\", round(prob_6, 4))\n\n\na) P(X = 6) = 0.1042\n\n\nCódigo\n# Verificación manual\nprob_6_manual &lt;- (lambda^6 * exp(-lambda)) / factorial(6)\ncat(\"\\n   Verificación manual:\", round(prob_6_manual, 4))\n\n\n\n   Verificación manual: 0.1042\n\n\nCódigo\n# b) P(X = 0)\nprob_0 &lt;- dpois(0, lambda)\ncat(\"\\n\\nb) P(X = 0) =\", round(prob_0, 4))\n\n\n\n\nb) P(X = 0) = 0.0183\n\n\nCódigo\n# c) P(X ≤ 3)\nprob_3_o_menos &lt;- ppois(3, lambda)\ncat(\"\\n\\nc) P(X ≤ 3) =\", round(prob_3_o_menos, 4))\n\n\n\n\nc) P(X ≤ 3) = 0.4335\n\n\nCódigo\n# Verificación manual para c)\nprob_3_manual &lt;- sum(dpois(0:3, lambda))\ncat(\"\\n   Verificación manual:\", round(prob_3_manual, 4))\n\n\n\n   Verificación manual: 0.4335\n\n\nInterpretación de Resultados\n\n\nCódigo\ncat(\"a) La probabilidad de recibir exactamente 6 llamadas en un minuto es\", \n    round(prob_6, 6), \"\\n\")\n\n\na) La probabilidad de recibir exactamente 6 llamadas en un minuto es 0.104196 \n\n\nCódigo\ncat(\"b) La probabilidad de no recibir ninguna llamada en un minuto es\", \n    round(prob_0 , 6), \"\\n\")\n\n\nb) La probabilidad de no recibir ninguna llamada en un minuto es 0.018316 \n\n\nCódigo\ncat(\"c) La probabilidad de recibir 3 o menos llamadas en un minuto es\", \n    round(prob_3_o_menos, 6), \"\\n\\n\")\n\n\nc) La probabilidad de recibir 3 o menos llamadas en un minuto es 0.43347 \n\n\nCódigo\n# Estadísticas adicionales\nmedia &lt;- lambda\nvarianza &lt;- lambda\ndesv_std &lt;- sqrt(lambda)\n\ncat(\"Estadísticas de la distribución:\\n\")\n\n\nEstadísticas de la distribución:\n\n\nCódigo\ncat(\"Media:\", media, \"llamadas por minuto\\n\")\n\n\nMedia: 4 llamadas por minuto\n\n\nCódigo\ncat(\"Varianza:\", varianza, \"\\n\")\n\n\nVarianza: 4 \n\n\nCódigo\ncat(\"Desviación estándar:\", round(desv_std, 2), \"llamadas por minuto\\n\")\n\n\nDesviación estándar: 2 llamadas por minuto\n\n\nGráfica de la Distribución del Ejemplo\n\n\nCódigo\n# Valores para graficar\nk_vals &lt;- 0:12\nlambda &lt;- 4\nprob_vals &lt;- dpois(k_vals, lambda)\n\n# Data frame para ggplot\ndata_ejemplo &lt;- data.frame(k = k_vals, probabilidad = prob_vals)\n\n# Resaltar los valores del ejemplo\ndata_ejemplo$color &lt;- \"Normal\"\ndata_ejemplo$color[data_ejemplo$k == 6] &lt;- \"P(X = 6)\"\ndata_ejemplo$color[data_ejemplo$k == 0] &lt;- \"P(X = 0)\"\ndata_ejemplo$color[data_ejemplo$k &lt;= 3] &lt;- ifelse(data_ejemplo$color[data_ejemplo$k &lt;= 3] == \"Normal\", \n                                                 \"P(X ≤ 3)\", data_ejemplo$color[data_ejemplo$k &lt;= 3])\n\n# Gráfico\nggplot(data_ejemplo, aes(x = k, y = probabilidad, fill = color)) +\n  geom_col(alpha = 0.8, width = 0.7) +\n  labs(title = \"Distribución de Poisson: Llamadas Telefónicas\",\n       subtitle = \"λ = 4 llamadas por minuto\",\n       x = \"Número de llamadas (k)\",\n       y = \"Probabilidad P(X = k)\",\n       fill = \"Casos del ejemplo\") +\n  theme_minimal() +\n  scale_fill_manual(values = c(\"Normal\" = \"#BDC3C7\", \n                              \"P(X = 6)\" = \"#E74C3C\", \n                              \"P(X = 0)\" = \"#3498DB\",\n                              \"P(X ≤ 3)\" = \"#2ECC71\")) +\n  scale_x_continuous(breaks = k_vals) +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\nDistribución de Poisson para el ejemplo (λ = 4)",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Distribución Poisson</span>"
    ]
  },
  {
    "objectID": "poisson.html#comparación-efecto-del-parámetro-lambda",
    "href": "poisson.html#comparación-efecto-del-parámetro-lambda",
    "title": "7  Distribución Poisson",
    "section": "7.5 Comparación: Efecto del Parámetro \\(\\lambda\\)",
    "text": "7.5 Comparación: Efecto del Parámetro \\(\\lambda\\)\nEl parámetro \\(\\lambda\\) controla tanto la posición central como la dispersión de la distribución de Poisson.\n\n\nCódigo\n# Diferentes valores de lambda\nlambda_values &lt;- c(1, 3, 5, 10)\n\n# Rango de k para cada lambda\nk_max &lt;- max(lambda_values) + 3 * sqrt(max(lambda_values))\nk_vals &lt;- 0:ceiling(k_max)\n\n# Crear data frame para todos los valores\ndata_lambda &lt;- expand.grid(k = k_vals, lambda = lambda_values)\ndata_lambda$probabilidad &lt;- dpois(data_lambda$k, data_lambda$lambda)\ndata_lambda$lambda_label &lt;- paste(\"λ =\", data_lambda$lambda)\ndata_lambda$lambda_label &lt;- factor(data_lambda$lambda_label, levels = c(\"λ = 1\", \"λ = 3\", \"λ = 5\", \"λ = 10\"))\n\n\n# Gráfico comparativo\nggplot(data_lambda, aes(x = k, y = probabilidad, fill = lambda_label)) +\n  geom_col(alpha = 0.7, position = \"identity\") +\n  facet_wrap(~lambda_label, scales = \"free\") +\n  labs(title = \"Efecto del Parámetro λ en la Distribución de Poisson\",\n       subtitle = \"A mayor λ, la distribución se desplaza hacia la derecha y se dispersa más\",\n       x = \"Número de eventos (k)\",\n       y = \"Probabilidad P(X = k)\") +\n  theme_minimal() +\n  theme(legend.position = \"none\") +\n  scale_fill_brewer(type = \"qual\", palette = \"Set1\")\n\n\n\n\n\nEfecto del parámetro λ en la distribución de Poisson\n\n\n\n\nComparación Superpuesta\n\n\nCódigo\n# Limitar k para mejor visualización\nk_vals_plot &lt;- 0:20\n\n# Filtrar datos\ndata_plot &lt;- data_lambda[data_lambda$k &lt;= 20, ]\n\n# Gráfico superpuesto\nggplot(data_plot, aes(x = k, y = probabilidad, color = lambda_label)) +\n  geom_line(linewidth = 1.2) +\n  geom_point(size = 2) +\n  labs(title = \"Comparación de Distribuciones de Poisson\",\n       subtitle = \"Diferentes valores del parámetro λ\",\n       x = \"Número de eventos (k)\",\n       y = \"Probabilidad P(X = k)\",\n       color = \"Parámetro λ\") +\n  theme_minimal() +\n  scale_color_brewer(type = \"qual\", palette = \"Set1\") +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\nComparación superpuesta de diferentes valores de λ\n\n\n\n\nTabla Comparativa de Parámetros Estadísticos\n\n\nCódigo\n# Crear tabla con estadísticas para diferentes lambdas\nlambdas_tabla &lt;- c(0.5, 1, 2, 3, 5, 8, 10, 15)\n\ntabla_stats &lt;- data.frame(\n  Lambda = lambdas_tabla,\n  Media = lambdas_tabla,\n  Varianza = lambdas_tabla,\n  Desv_Std = sqrt(lambdas_tabla),\n  CV = 1/sqrt(lambdas_tabla),\n  P_X_eq_0 = dpois(0, lambdas_tabla)\n)\n\n\n\nkable(tabla_stats, digits = 4,\n      caption = \"Parámetros estadísticos para diferentes valores de λ\",\n      col.names = c(\"λ\", \"Media\", \"Varianza\", \"Desv. Std.\", \"CV\", \"P(X=0)\"))\n\n\n\nParámetros estadísticos para diferentes valores de λ\n\n\nλ\nMedia\nVarianza\nDesv. Std.\nCV\nP(X=0)\n\n\n\n\n0.5\n0.5\n0.5\n0.7071\n1.4142\n0.6065\n\n\n1.0\n1.0\n1.0\n1.0000\n1.0000\n0.3679\n\n\n2.0\n2.0\n2.0\n1.4142\n0.7071\n0.1353\n\n\n3.0\n3.0\n3.0\n1.7321\n0.5774\n0.0498\n\n\n5.0\n5.0\n5.0\n2.2361\n0.4472\n0.0067\n\n\n8.0\n8.0\n8.0\n2.8284\n0.3536\n0.0003\n\n\n10.0\n10.0\n10.0\n3.1623\n0.3162\n0.0000\n\n\n15.0\n15.0\n15.0\n3.8730\n0.2582\n0.0000",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Distribución Poisson</span>"
    ]
  },
  {
    "objectID": "poisson.html#simulación-de-valores-poisson-y-comparación-con-la-teórica",
    "href": "poisson.html#simulación-de-valores-poisson-y-comparación-con-la-teórica",
    "title": "7  Distribución Poisson",
    "section": "7.6 Simulación de Valores Poisson y Comparación con la Teórica",
    "text": "7.6 Simulación de Valores Poisson y Comparación con la Teórica\nConsideremos una simulación con \\(\\lambda = 3.5\\) y \\(n = 15,000\\).\n\n\nCódigo\n# Parámetros para la simulación\nlambda &lt;- 3.5\nn_sim &lt;- 15000\n\n# Simulación de valores\nset.seed(42)\nvalores_simulados &lt;- rpois(n_sim, lambda)\n\n# Estadísticas de la simulación\nmedia_sim &lt;- mean(valores_simulados)\nvar_sim &lt;- var(valores_simulados)\nsd_sim &lt;- sd(valores_simulados)\n\n# Valores teóricos\nmedia_teorica &lt;- lambda\nvar_teorica &lt;- lambda\nsd_teorica &lt;- sqrt(lambda)\n\n# Tabla comparativa\ncomparacion &lt;- data.frame(\n  Estadística = c(\"Media\", \"Varianza\", \"Desv. Estándar\"),\n  Teórica = c(media_teorica, var_teorica, sd_teorica),\n  Simulada = c(media_sim, var_sim, sd_sim),\n  Diferencia = c(abs(media_teorica - media_sim), \n                 abs(var_teorica - var_sim), \n                 abs(sd_teorica - sd_sim)),\n  Error_Relativo = c(abs(media_teorica - media_sim)/media_teorica * 100,\n                     abs(var_teorica - var_sim)/var_teorica * 100,\n                     abs(sd_teorica - sd_sim)/sd_teorica * 100)\n)\n\nkable(comparacion, digits = 4, \n      caption = paste(\"Comparación teórica vs simulada (λ =\", lambda, \", n =\", format(n_sim, big.mark = \",\")),\n      col.names = c(\"Estadística\", \"Teórica\", \"Simulada\", \"Diferencia\", \"Error Rel. (%)\"))\n\n\n\nComparación teórica vs simulada (λ = 3.5 , n = 15,000\n\n\nEstadística\nTeórica\nSimulada\nDiferencia\nError Rel. (%)\n\n\n\n\nMedia\n3.5000\n3.4960\n0.0040\n0.1143\n\n\nVarianza\n3.5000\n3.5328\n0.0328\n0.9358\n\n\nDesv. Estándar\n1.8708\n1.8796\n0.0087\n0.4668\n\n\n\n\n\nComparación Gráfica: Simulación vs Teórica\n\n\nCódigo\n# Rango de valores para comparar\nk_max &lt;- quantile(valores_simulados, 0.99)\nk_vals &lt;- 0:k_max\n\n# Probabilidades teóricas\nprob_teorica &lt;- dpois(k_vals, lambda)\n\n# Frecuencias relativas de la simulación\nfreq_tabla &lt;- table(factor(valores_simulados, levels = k_vals))\nfreq_relativa &lt;- as.numeric(freq_tabla) / n_sim\n\n# Crear data frame para ggplot\ndata_comp &lt;- data.frame(\n  k = rep(k_vals, 2),\n  Probabilidad = c(prob_teorica, freq_relativa),\n  Tipo = rep(c(\"Teórica\", \"Simulada\"), each = length(k_vals))\n)\n\n# Gráfico de barras comparativo\nggplot(data_comp, aes(x = k, y = Probabilidad, fill = Tipo)) +\n  geom_col(position = \"dodge\", alpha = 0.7, width = 0.8) +\n  scale_x_continuous(breaks = seq(0, k_max, by = 1)) +\n  labs(title = \"Distribución de Poisson: Teórica vs Simulada\",\n       subtitle = paste(\"λ =\", lambda, \", n =\", format(n_sim, big.mark = \",\")),\n       x = \"Número de eventos (k)\",\n       y = \"Probabilidad / Frecuencia relativa\",\n       fill = \"Distribución\") +\n  theme_minimal() +\n  theme(legend.position = \"top\") +\n  scale_fill_manual(values = c(\"Teórica\" = \"#3498DB\", \"Simulada\" = \"#E74C3C\")) \n\n\n\n\n\nComparación entre distribución teórica y simulada de Poisson",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Distribución Poisson</span>"
    ]
  },
  {
    "objectID": "poisson.html#verificación-de-la-suma-de-variables-poisson-independientes",
    "href": "poisson.html#verificación-de-la-suma-de-variables-poisson-independientes",
    "title": "7  Distribución Poisson",
    "section": "7.7 Verificación de la Suma de Variables Poisson Independientes",
    "text": "7.7 Verificación de la Suma de Variables Poisson Independientes\n\nTeorema 7.1 Si \\(X_1 \\sim \\text{Poisson}(\\lambda_1)\\) y \\(X_2 \\sim \\text{Poisson}(\\lambda_2)\\) son independientes, entonces:\n\\[Y = X_1 + X_2 \\sim \\text{Poisson}(\\lambda_1 + \\lambda_2)\\]\nGeneralización: Si \\(X_1, X_2, \\ldots, X_n\\) son variables Poisson independientes con parámetros \\(\\lambda_1, \\lambda_2, \\ldots, \\lambda_n\\), entonces:\n\\[\\sum_{i=1}^n X_i \\sim \\text{Poisson}\\left(\\sum_{i=1}^n \\lambda_i\\right)\\]\n\n\n7.7.1 Verificación por Simulación: Caso de Dos Variables\n\n\nCódigo\n# Parámetros para las dos variables Poisson\nlambda1 &lt;- 2.5\nlambda2 &lt;- 4.2\nlambda_suma &lt;- lambda1 + lambda2\nn_sim_suma &lt;- 12000\n\nset.seed(123)\n\n# Método 1: Generar dos Poisson independientes y sumarlas\nX1 &lt;- rpois(n_sim_suma, lambda1)\nX2 &lt;- rpois(n_sim_suma, lambda2)\nsuma_simulada &lt;- X1 + X2\n\n# Método 2: Generar directamente de Poisson(λ₁ + λ₂)\npoisson_directa &lt;- rpois(n_sim_suma, lambda_suma)\n\n# Comparar estadísticas\nstats_suma &lt;- data.frame(\n  Método = c(\"X₁ + X₂ (Suma)\", \"Poisson Directa\", \"Teórico\"),\n  Media = c(mean(suma_simulada), mean(poisson_directa), lambda_suma),\n  Varianza = c(var(suma_simulada), var(poisson_directa), lambda_suma),\n  Desv_Std = c(sd(suma_simulada), sd(poisson_directa), sqrt(lambda_suma)),\n  Min = c(min(suma_simulada), min(poisson_directa), 0),\n  Max = c(max(suma_simulada), max(poisson_directa), NA)\n)\n\nkable(stats_suma, digits = 4,\n      caption = paste(\"Verificación suma de Poisson (λ₁ =\", lambda1, \", λ₂ =\", lambda2, \")\"))\n\n\n\nVerificación suma de Poisson (λ₁ = 2.5 , λ₂ = 4.2 )\n\n\nMétodo\nMedia\nVarianza\nDesv_Std\nMin\nMax\n\n\n\n\nX₁ + X₂ (Suma)\n6.6752\n6.6432\n2.5774\n0\n18\n\n\nPoisson Directa\n6.6546\n6.7097\n2.5903\n0\n17\n\n\nTeórico\n6.7000\n6.7000\n2.5884\n0\nNA\n\n\n\n\n\nCódigo\n# Información adicional\ncat(\"\\nPARÁMETROS INDIVIDUALES:\\n\")\n\n\n\nPARÁMETROS INDIVIDUALES:\n\n\nCódigo\ncat(\"========================\\n\")\n\n\n========================\n\n\nCódigo\ncat(\"X₁ ~ Poisson(\", lambda1, \"): E(X₁) =\", lambda1, \", Var(X₁) =\", lambda1, \"\\n\")\n\n\nX₁ ~ Poisson( 2.5 ): E(X₁) = 2.5 , Var(X₁) = 2.5 \n\n\nCódigo\ncat(\"X₂ ~ Poisson(\", lambda2, \"): E(X₂) =\", lambda2, \", Var(X₂) =\", lambda2, \"\\n\\n\")\n\n\nX₂ ~ Poisson( 4.2 ): E(X₂) = 4.2 , Var(X₂) = 4.2 \n\n\nCódigo\ncat(\"SUMA TEÓRICA:\\n\")\n\n\nSUMA TEÓRICA:\n\n\nCódigo\ncat(\"=============\\n\")\n\n\n=============\n\n\nCódigo\ncat(\"Y = X₁ + X₂ ~ Poisson(\", lambda_suma, \")\\n\")\n\n\nY = X₁ + X₂ ~ Poisson( 6.7 )\n\n\nCódigo\ncat(\"E[Y] = E(X₁) + E(X₂) =\", lambda_suma, \"\\n\")\n\n\nE[Y] = E(X₁) + E(X₂) = 6.7 \n\n\nCódigo\ncat(\"Var(Y) = Var(X₁) + Var(X₂) =\", lambda_suma, \" (por independencia)\\n\")\n\n\nVar(Y) = Var(X₁) + Var(X₂) = 6.7  (por independencia)\n\n\nComparación Visual de las Distribuciones\n\n\nCódigo\n# Crear data frame para comparación\ndata_suma_comp &lt;- data.frame(\n  valores = c(suma_simulada, poisson_directa),\n  metodo = rep(c(\"X1 + X2\", \"Poisson(λ1+λ2)\"), each = n_sim_suma)\n)\n\n# Histogramas superpuestos\nggplot(data_suma_comp, aes(x = valores, fill = metodo)) +\n  geom_histogram(alpha = 0.6, binwidth = 1, position = \"dodge2\", center =0) +\n  scale_x_continuous(breaks = seq(0, max(c(suma_simulada, poisson_directa)), by = 1)) +\n  labs(title = \"Verificación de la Propiedad Aditiva de Poisson\",\n       subtitle = paste(\"λ1 =\", lambda1, \", λ2 =\", lambda2, \", λ1+λ2 =\", lambda_suma),\n       x = \"Número de eventos\",\n       y = \"Frecuencia\",\n       fill = \"Método\") +\n  theme_minimal() +\n  theme(legend.position = \"top\") +\n  scale_fill_manual(values = c(\"X1 + X2\" = \"#3498DB\", \"Poisson(λ1+λ2)\" = \"#E74C3C\"))\n\n\n\n\n\nComparación visual: Suma de Poisson vs Poisson directa\n\n\n\n\n\n\n7.7.2 Verificación con Múltiples Variables\n\n\nCódigo\n# Suma de 4 variables Poisson independientes\nlambdas &lt;- c(1.5, 2.0, 2.5, 3.0)\nlambda_total &lt;- sum(lambdas)\nn_vars &lt;- length(lambdas)\n\n# Generar las variables individuales\nvariables_poisson &lt;- matrix(0, nrow = n_sim_suma, ncol = n_vars)\nfor(i in 1:n_vars) {\n  variables_poisson[, i] &lt;- rpois(n_sim_suma, lambdas[i])\n}\n\n# Suma de las 4 variables\nsuma_multiple &lt;- rowSums(variables_poisson)\n\n# Poisson directa con λ total\npoisson_multiple_directa &lt;- rpois(n_sim_suma, lambda_total)\n\n# Estadísticas comparativas\ncat(\"VERIFICACIÓN CON\", n_vars, \"VARIABLES POISSON\\n\")\n\n\nVERIFICACIÓN CON 4 VARIABLES POISSON\n\n\nCódigo\ncat(\"λ₁ =\", lambdas[1], \", λ₂ =\", lambdas[2], \", λ₃ =\", lambdas[3], \", λ₄ =\", lambdas[4], \"\\n\")\n\n\nλ₁ = 1.5 , λ₂ = 2 , λ₃ = 2.5 , λ₄ = 3 \n\n\nCódigo\ncat(\"λ_total =\", lambda_total, \"\\n\\n\")\n\n\nλ_total = 9 \n\n\nCódigo\nstats_multiple &lt;- data.frame(\n  Distribución = c(\"Suma de 4 Poisson\", \"Poisson(λ_total)\", \"Diferencia\"),\n  Media = c(mean(suma_multiple), mean(poisson_multiple_directa), \n            abs(mean(suma_multiple) - mean(poisson_multiple_directa))),\n  Varianza = c(var(suma_multiple), var(poisson_multiple_directa),\n               abs(var(suma_multiple) - var(poisson_multiple_directa)))\n)\n\nkable(stats_multiple, digits = 4, \n      caption = \"Estadísticas para suma de múltiples variables Poisson\")\n\n\n\nEstadísticas para suma de múltiples variables Poisson\n\n\nDistribución\nMedia\nVarianza\n\n\n\n\nSuma de 4 Poisson\n8.9958\n9.0190\n\n\nPoisson(λ_total)\n9.0409\n8.8526\n\n\nDiferencia\n0.0452\n0.1663\n\n\n\nVerificación con suma de múltiples variables Poisson\n\n\nCódigo\n# Visualización\ndata_multiple &lt;- data.frame(\n  valores = c(suma_multiple, poisson_multiple_directa),\n  tipo = rep(c(\"Suma de 4 Poisson\", \"Poisson(λ_total)\"), each = n_sim_suma)\n)\n\nggplot(data_multiple, aes(x = valores, fill = tipo)) +\n  geom_histogram(alpha = 0.6, binwidth = 1, center=0, position = \"dodge2\") +\n  scale_x_continuous(breaks = seq(0, max(c(suma_multiple, poisson_multiple_directa)), by = 1)) +\n  labs(title = \"Suma de Múltiples Variables Poisson\",\n       subtitle = paste(\"λ_total =\", lambda_total),\n       x = \"Número de eventos\",\n       y = \"Frecuencia\",\n       fill = \"Tipo\") +\n  theme_minimal() +\n  scale_fill_manual(values = c(\"#2ECC71\", \"#F39C12\"))\n\n\n\n\n\nVerificación con suma de múltiples variables Poisson",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Distribución Poisson</span>"
    ]
  },
  {
    "objectID": "poisson.html#teorema-central-del-límite-con-variables-poisson",
    "href": "poisson.html#teorema-central-del-límite-con-variables-poisson",
    "title": "7  Distribución Poisson",
    "section": "7.8 Teorema Central del Límite con Variables Poisson",
    "text": "7.8 Teorema Central del Límite con Variables Poisson\nConfiguración del Experimento\nConsideremos una variable aleatoria \\(X \\sim \\text{Poisson}(\\lambda = 3)\\). Vamos a generar múltiples muestras de diferentes tamaños y observar cómo se comporta la distribución de la media muestral \\(\\bar{X}\\).\nTeoría esperada:\n\nPara muestras de tamaño \\(n\\) de \\(X \\sim \\text{Poisson}(\\lambda)\\)\n\\(\\bar{X} \\sim N\\left(\\lambda, \\frac{\\lambda}{n}\\right)\\) cuando \\(n\\) es grande\n\\(E(\\bar{X}) = \\lambda\\) y \\(\\text{Var}(\\bar{X}) = \\frac{\\lambda}{n}\\)\n\n\n\nCódigo\n# Parámetros del experimento\nlambda_tcl &lt;- 3\ntamaños_muestra &lt;- c(5, 10, 25, 50, 100)\nnum_muestras &lt;- 2000\n\ncat(\"CONFIGURACIÓN DEL EXPERIMENTO\\n\")\n\n\nCONFIGURACIÓN DEL EXPERIMENTO\n\n\nCódigo\ncat(\"=============================\\n\")\n\n\n=============================\n\n\nCódigo\ncat(\"Distribución original: Poisson(λ =\", lambda_tcl, \")\\n\")\n\n\nDistribución original: Poisson(λ = 3 )\n\n\nCódigo\ncat(\"Tamaños de muestra:\", paste(tamaños_muestra, collapse = \", \"), \"\\n\")\n\n\nTamaños de muestra: 5, 10, 25, 50, 100 \n\n\nCódigo\ncat(\"Número de muestras por tamaño:\", num_muestras, \"\\n\\n\")\n\n\nNúmero de muestras por tamaño: 2000 \n\n\nCódigo\ncat(\"Parámetros teóricos de la distribución original:\\n\")\n\n\nParámetros teóricos de la distribución original:\n\n\nCódigo\ncat(\"E[X] =\", lambda_tcl, \"\\n\")\n\n\nE[X] = 3 \n\n\nCódigo\ncat(\"Var(X) =\", lambda_tcl, \"\\n\")\n\n\nVar(X) = 3 \n\n\nCódigo\ncat(\"SD(X) =\", round(sqrt(lambda_tcl), 3), \"\\n\")\n\n\nSD(X) = 1.732 \n\n\nGeneración de Muestras y Cálculo de Medias\n\n\nCódigo\n# Función para generar medias muestrales\ngenerar_medias_muestrales &lt;- function(n, num_muestras, lambda) {\n  medias &lt;- numeric(num_muestras)\n  for(i in 1:num_muestras) {\n    muestra &lt;- rpois(n, lambda)\n    medias[i] &lt;- mean(muestra)\n  }\n  return(medias)\n}\n\n# Generar medias para cada tamaño de muestra\nset.seed(123)\nmedias_muestrales &lt;- list()\n\nfor(i in seq_along(tamaños_muestra)) {\n  n &lt;- tamaños_muestra[i]\n  medias_muestrales[[i]] &lt;- generar_medias_muestrales(n, num_muestras, lambda_tcl)\n  names(medias_muestrales)[i] &lt;- paste(\"n\", n, sep = \"_\")\n}\n\n# Crear data frame para análisis\ndata_tcl &lt;- do.call(rbind, lapply(seq_along(medias_muestrales), function(i) {\n  data.frame(\n    media_muestral = medias_muestrales[[i]],\n    n = tamaños_muestra[i],\n    n_label = paste(\"n =\", tamaños_muestra[i])\n  )\n}))\n\ndata_tcl$n_label &lt;- factor(data_tcl$n_label, levels = c(\"n = 5\", \"n = 10\", \"n = 25\", \"n = 50\", \"n = 100\"))\n\ncat(\"Muestras generadas exitosamente.\\n\")\n\n\nMuestras generadas exitosamente.\n\n\nCódigo\ncat(\"Total de observaciones:\", nrow(data_tcl), \"\\n\")\n\n\nTotal de observaciones: 10000 \n\n\nVerificación de Convergencia de Media y Varianza\n\n\nCódigo\n# Calcular estadísticas para cada tamaño de muestra\nestadisticas_tcl &lt;- data.frame(\n  n = tamaños_muestra,\n  Media_Observada = sapply(medias_muestrales, mean),\n  Media_Teorica = rep(lambda_tcl, length(tamaños_muestra)),\n  Var_Observada = sapply(medias_muestrales, var),\n  Var_Teorica = lambda_tcl / tamaños_muestra,\n  SD_Observada = sapply(medias_muestrales, sd),\n  SD_Teorica = sqrt(lambda_tcl / tamaños_muestra)\n)\n\n# Calcular errores\n\nestadisticas_tcl &lt;- estadisticas_tcl |&gt; mutate(\n  Error_Media = abs(Media_Observada - Media_Teorica),\n  Error_Var = abs(Var_Observada - Var_Teorica),\n  Error_SD = abs(SD_Observada - SD_Teorica))\n\nkable(estadisticas_tcl, digits = 4,\n      caption = \"Convergencia de estadísticos de la media muestral\",\n      col.names = c(\"n\", \"Media Obs.\", \"Media Teór.\", \"Var. Obs.\", \"Var. Teór.\", \n                   \"SD Obs.\", \"SD Teór.\", \"Error Media\", \"Error Var.\", \"Error SD\"))\n\n\n\nConvergencia de estadísticos de la media muestral\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nn\nMedia Obs.\nMedia Teór.\nVar. Obs.\nVar. Teór.\nSD Obs.\nSD Teór.\nError Media\nError Var.\nError SD\n\n\n\n\nn_5\n5\n2.9814\n3\n0.5870\n0.60\n0.7662\n0.7746\n0.0186\n0.0130\n0.0084\n\n\nn_10\n10\n2.9926\n3\n0.3136\n0.30\n0.5600\n0.5477\n0.0074\n0.0136\n0.0123\n\n\nn_25\n25\n2.9945\n3\n0.1171\n0.12\n0.3422\n0.3464\n0.0055\n0.0029\n0.0042\n\n\nn_50\n50\n3.0065\n3\n0.0579\n0.06\n0.2406\n0.2449\n0.0065\n0.0021\n0.0043\n\n\nn_100\n100\n3.0000\n3\n0.0288\n0.03\n0.1698\n0.1732\n0.0000\n0.0012\n0.0035\n\n\n\n\n\nVisualización de la Convergencia\n\n\nCódigo\n# Histogramas de las medias muestrales\nggplot(data_tcl, aes(x = media_muestral)) +\n  geom_histogram(aes(y = after_stat(density)), bins = 30, alpha = 0.7, fill = \"#3498DB\") +\n  geom_vline(xintercept = lambda_tcl, color = \"#E74C3C\", linetype = \"dashed\", linewidth = 1) +\n  facet_wrap(~n_label, scales = \"free_y\") +\n  labs(title = \"Distribución de Medias Muestrales (TCL)\",\n       subtitle = paste(\"Distribución original: Poisson(λ =\", lambda_tcl, \"). Línea roja: media teórica\"),\n       x = \"Media muestral\",\n       y = \"Densidad\") +\n  theme_minimal()\n\n\n\n\n\nDistribución de medias muestrales para diferentes tamaños de muestra\n\n\n\n\n\n\nCódigo\n# Agregar curvas normales específicas para cada panel\ndata_tcl_split &lt;- split(data_tcl, data_tcl$n_label)\n\nplots_comparacion &lt;- lapply(names(data_tcl_split), function(label) {\n  datos &lt;- data_tcl_split[[label]]\n  n_val &lt;- unique(datos$n)\n  \n  ggplot(datos, aes(x = media_muestral)) +\n    geom_histogram(aes(y = after_stat(density)), bins = 25, alpha = 0.6, fill = \"#3498DB\") +\n    stat_function(fun = dnorm, \n                  args = list(mean = lambda_tcl, sd = sqrt(lambda_tcl/n_val)), \n                  color = \"#E74C3C\", linewidth = 1.2) +\n    ggtitle(label) +\n    xlab(\"Media muestral\") +\n    ylab(\"Densidad\") +\n    theme_minimal()\n})\n\n# Combinar gráficos\ndo.call(grid.arrange, c(plots_comparacion, ncol = 3))\n\n\n\n\n\nComparación con distribución normal teórica",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Distribución Poisson</span>"
    ]
  },
  {
    "objectID": "poisson.html#aplicaciones-de-la-distribución-de-poisson",
    "href": "poisson.html#aplicaciones-de-la-distribución-de-poisson",
    "title": "7  Distribución Poisson",
    "section": "7.9 Aplicaciones de la Distribución de Poisson",
    "text": "7.9 Aplicaciones de la Distribución de Poisson\n\n7.9.1 Gestión de Tráfico de Red\nContexto: Una empresa de telecomunicaciones monitorea el tráfico de datos en sus servidores. El número de paquetes de datos que llegan por segundo sigue una distribución de Poisson.\n\n\nCódigo\n# Parámetros del problema\nlambda_trafico &lt;- 8.5  # 8.5 paquetes por segundo en promedio\n\ncat(\"APLICACIÓN 1: TRÁFICO DE RED\\n\")\n\n\nAPLICACIÓN 1: TRÁFICO DE RED\n\n\nCódigo\ncat(\"============================\\n\")\n\n\n============================\n\n\nCódigo\ncat(\"Parámetro: λ =\", lambda_trafico, \"paquetes por segundo\\n\\n\")\n\n\nParámetro: λ = 8.5 paquetes por segundo\n\n\nCódigo\n# Preguntas típicas\ncat(\"ANÁLISIS DEL TRÁFICO:\\n\")\n\n\nANÁLISIS DEL TRÁFICO:\n\n\nCódigo\n# 1. Probabilidad de recibir exactamente 10 paquetes en un segundo\nprob_10 &lt;- dpois(10, lambda_trafico)\ncat(\"1. P(X = 10 paquetes) =\", round(prob_10, 4), \"(\", round(prob_10*100, 2), \"%)\\n\")\n\n\n1. P(X = 10 paquetes) = 0.1104 ( 11.04 %)\n\n\nCódigo\n# 2. Probabilidad de recibir más de 12 paquetes\nprob_mas_12 &lt;- 1 - ppois(12, lambda_trafico)\ncat(\"2. P(X &gt; 12 paquetes) =\", round(prob_mas_12, 4), \"(\", round(prob_mas_12*100, 2), \"%)\\n\")\n\n\n2. P(X &gt; 12 paquetes) = 0.0909 ( 9.09 %)\n\n\nCódigo\n# 3. Número esperado de paquetes en 5 segundos\n# En 5 segundos: Y ~ Poisson(5λ)\nlambda_5seg &lt;- 5 * lambda_trafico\npaquetes_5seg_esperados &lt;- lambda_5seg\ncat(\"3. Paquetes esperados en 5 segundos =\", paquetes_5seg_esperados, \"\\n\")\n\n\n3. Paquetes esperados en 5 segundos = 42.5 \n\n\nCódigo\n# 4. Probabilidad de sobrecarga (más de 15 paquetes por segundo)\nprob_sobrecarga &lt;- 1 - ppois(15, lambda_trafico)\ncat(\"4. P(Sobrecarga) = P(X &gt; 15) =\", round(prob_sobrecarga, 4), \"\\n\")\n\n\n4. P(Sobrecarga) = P(X &gt; 15) = 0.0138 \n\n\nCódigo\n# Simulación para verificar\nset.seed(456)\nn_sim_trafico &lt;- 10000\nsim_paquetes &lt;- rpois(n_sim_trafico, lambda_trafico)\n\ncat(\"\\nVERIFICACIÓN POR SIMULACIÓN (n =\", format(n_sim_trafico, big.mark = \",\"), \"):\\n\")\n\n\n\nVERIFICACIÓN POR SIMULACIÓN (n = 10,000 ):\n\n\nCódigo\ncat(\"Media simulada:\", round(mean(sim_paquetes), 3), \"(teórica:\", lambda_trafico, \")\\n\")\n\n\nMedia simulada: 8.53 (teórica: 8.5 )\n\n\nCódigo\ncat(\"P(X = 10) simulada:\", round(mean(sim_paquetes == 10), 4), \"(teórica:\", round(prob_10, 4), \")\\n\")\n\n\nP(X = 10) simulada: 0.1082 (teórica: 0.1104 )\n\n\nCódigo\ncat(\"P(X &gt; 15) simulada:\", round(mean(sim_paquetes &gt; 15), 4), \"(teórica:\", round(prob_sobrecarga, 4), \")\\n\")\n\n\nP(X &gt; 15) simulada: 0.0153 (teórica: 0.0138 )\n\n\n\n\nCódigo\n# Visualización del problema de tráfico\nk_trafico &lt;- 0:20\nprob_trafico &lt;- dpois(k_trafico, lambda_trafico)\n\ndata_trafico &lt;- data.frame(\n  paquetes = k_trafico,\n  probabilidad = prob_trafico\n)\n\n# Definir zonas\ndata_trafico$zona &lt;- case_when(\n  data_trafico$paquetes &lt;= 5 ~ \"Bajo\",\n  data_trafico$paquetes &lt;= 12 ~ \"Normal\", \n  data_trafico$paquetes &lt;= 15 ~ \"Alto\",\n  TRUE ~ \"Sobrecarga\"\n)\n\nggplot(data_trafico, aes(x = paquetes, y = probabilidad, fill = zona)) +\n  geom_col(alpha = 0.8) +\n  labs(title = \"Distribución del Tráfico de Red por Segundo\",\n       subtitle = paste(\"λ =\", lambda_trafico, \"paquetes/segundo\"),\n       x = \"Número de paquetes\",\n       y = \"Probabilidad\",\n       fill = \"Zona de tráfico\") +\n  theme_minimal() +\n  scale_fill_manual(values = c(\"Bajo\" = \"#2ECC71\", \"Normal\" = \"#3498DB\", \n                              \"Alto\" = \"#F39C12\", \"Sobrecarga\" = \"#E74C3C\"))\n\n\n\n\n\nDistribución del tráfico de red y zonas críticas\n\n\n\n\n\n\n7.9.2 Control de Calidad Industrial\nContexto: Una fábrica de semiconductores monitorea defectos en sus productos. El número de defectos por lote sigue una distribución de Poisson.\n\n\nCódigo\n# Parámetros del control de calidad\nlambda_defectos &lt;- 2.3  # 2.3 defectos por lote en promedio\n\ncat(\"APLICACIÓN 2: CONTROL DE CALIDAD\\n\")\n\n\nAPLICACIÓN 2: CONTROL DE CALIDAD\n\n\nCódigo\ncat(\"================================\\n\")\n\n\n================================\n\n\nCódigo\ncat(\"Parámetro: λ =\", lambda_defectos, \"defectos por lote\\n\\n\")\n\n\nParámetro: λ = 2.3 defectos por lote\n\n\nCódigo\n# Análisis de calidad\ncat(\"ANÁLISIS DE CONTROL DE CALIDAD:\\n\")\n\n\nANÁLISIS DE CONTROL DE CALIDAD:\n\n\nCódigo\n# 1. Probabilidad de lote perfecto (0 defectos)\nprob_perfecto &lt;- dpois(0, lambda_defectos)\ncat(\"1. P(Lote perfecto) = P(X = 0) =\", round(prob_perfecto, 4), \"(\", round(prob_perfecto*100, 1), \"%)\\n\")\n\n\n1. P(Lote perfecto) = P(X = 0) = 0.1003 ( 10 %)\n\n\nCódigo\n# 2. Probabilidad de lote aceptable (≤ 3 defectos)\nprob_aceptable &lt;- ppois(3, lambda_defectos)\ncat(\"2. P(Lote aceptable) = P(X ≤ 3) =\", round(prob_aceptable, 4), \"(\", round(prob_aceptable*100, 1), \"%)\\n\")\n\n\n2. P(Lote aceptable) = P(X ≤ 3) = 0.7993 ( 79.9 %)\n\n\nCódigo\n# 3. Probabilidad de rechazo (&gt; 5 defectos)\nprob_rechazo &lt;- 1 - ppois(5, lambda_defectos)\ncat(\"3. P(Rechazo) = P(X &gt; 5) =\", round(prob_rechazo, 4), \"(\", round(prob_rechazo*100, 1), \"%)\\n\")\n\n\n3. P(Rechazo) = P(X &gt; 5) = 0.03 ( 3 %)\n\n\nCódigo\n# 4. Análisis económico\ncosto_defecto &lt;- 50  # $50 por defecto\ndefectos_esperados &lt;- lambda_defectos\ncosto_esperado_lote &lt;- defectos_esperados * costo_defecto\ncat(\"4. Costo esperado por defectos por lote: $\", costo_esperado_lote, \"\\n\")\n\n\n4. Costo esperado por defectos por lote: $ 115 \n\n\nCódigo\n# 5. Análisis de múltiples lotes\nn_lotes &lt;- 100\nlambda_total &lt;- n_lotes * lambda_defectos\ncat(\"5. Defectos esperados en\", n_lotes, \"lotes:\", lambda_total, \"\\n\")\n\n\n5. Defectos esperados en 100 lotes: 230 \n\n\n\n\nCódigo\n# Simulación del proceso de control de calidad\nset.seed(789)\nn_lotes_sim &lt;- 1000\nlotes_simulados &lt;- rpois(n_lotes_sim, lambda_defectos)\n\n# Clasificar lotes\nclasificacion &lt;- case_when(\n  lotes_simulados == 0 ~ \"Perfecto\",\n  lotes_simulados &lt;= 3 ~ \"Aceptable\",\n  lotes_simulados &lt;= 5 ~ \"Revisión\",\n  TRUE ~ \"Rechazo\"\n)\n\n# Crear data frame para visualización\ndata_calidad &lt;- data.frame(\n  defectos = lotes_simulados,\n  clasificacion = factor(clasificacion, \n                        levels = c(\"Perfecto\", \"Aceptable\", \"Revisión\", \"Rechazo\"))\n)\n\n# Gráfico de la simulación\nggplot(data_calidad, aes(x = defectos, fill = clasificacion)) +\n  geom_histogram(bins = 15, alpha = 0.8, position = \"stack\") +\n  labs(title = \"Simulación de Control de Calidad\",\n       subtitle = paste(\"n =\", format(n_lotes_sim, big.mark = \",\"), \"lotes simulados\"),\n       x = \"Número de defectos por lote\",\n       y = \"Frecuencia\",\n       fill = \"Clasificación\") +\n  theme_minimal() +\n  scale_fill_manual(values = c(\"Perfecto\" = \"#2ECC71\", \"Aceptable\" = \"#3498DB\",\n                              \"Revisión\" = \"#F39C12\", \"Rechazo\" = \"#E74C3C\"))\n\n\n\n\n\nSimulación del proceso de control de calidad\n\n\n\n\nCódigo\n# Tabla de resultados de la simulación\ntabla_clasificacion &lt;- table(clasificacion)\nprop_clasificacion &lt;- prop.table(tabla_clasificacion)\n\ncat(\"\\nRESULTADOS DE LA SIMULACIÓN:\\n\")\n\n\n\nRESULTADOS DE LA SIMULACIÓN:\n\n\nCódigo\ncat(\"============================\\n\")\n\n\n============================\n\n\nCódigo\nfor(i in 1:length(tabla_clasificacion)) {\n  cat(names(tabla_clasificacion)[i], \":\", tabla_clasificacion[i], \n      \"lotes (\", round(prop_clasificacion[i]*100, 1), \"%)\\n\")\n}\n\n\nAceptable : 676 lotes ( 67.6 %)\nPerfecto : 110 lotes ( 11 %)\nRechazo : 26 lotes ( 2.6 %)\nRevisión : 188 lotes ( 18.8 %)\n\n\n\n\n7.9.3 Epidemiología y Salud Pública\nContexto: Un epidemiólogo estudia la incidencia de una enfermedad rara en una población. Los nuevos casos por semana siguen una distribución de Poisson.\n\n\nCódigo\n# Parámetros epidemiológicos\nlambda_casos &lt;- 4.2  # 4.2 casos nuevos por semana en promedio\n\ncat(\"APLICACIÓN 3: EPIDEMIOLOGÍA\\n\")\n\n\nAPLICACIÓN 3: EPIDEMIOLOGÍA\n\n\nCódigo\ncat(\"===========================\\n\")\n\n\n===========================\n\n\nCódigo\ncat(\"Parámetro: λ =\", lambda_casos, \"casos nuevos por semana\\n\\n\")\n\n\nParámetro: λ = 4.2 casos nuevos por semana\n\n\nCódigo\ncat(\"ANÁLISIS EPIDEMIOLÓGICO:\\n\")\n\n\nANÁLISIS EPIDEMIOLÓGICO:\n\n\nCódigo\n# 1. Probabilidad de semana sin casos nuevos\nprob_sin_casos &lt;- dpois(0, lambda_casos)\ncat(\"1. P(Semana sin casos) =\", round(prob_sin_casos, 4), \"(\", round(prob_sin_casos*100, 1), \"%)\\n\")\n\n\n1. P(Semana sin casos) = 0.015 ( 1.5 %)\n\n\nCódigo\n# 2. Probabilidad de brote (más de 8 casos)\nprob_brote &lt;- 1 - ppois(8, lambda_casos)\ncat(\"2. P(Brote) = P(X &gt; 8) =\", round(prob_brote, 4), \"(\", round(prob_brote*100, 1), \"%)\\n\")\n\n\n2. P(Brote) = P(X &gt; 8) = 0.0279 ( 2.8 %)\n\n\nCódigo\n# 3. Casos esperados en un mes (4 semanas)\ncasos_mes &lt;- 4 * lambda_casos\ncat(\"3. Casos esperados en un mes:\", casos_mes, \"\\n\")\n\n\n3. Casos esperados en un mes: 16.8 \n\n\nCódigo\n# 4. Análisis de intervención\n# Si una intervención reduce λ en 30%\nlambda_intervencion &lt;- lambda_casos * 0.7\nreduccion_casos_mes &lt;- (lambda_casos - lambda_intervencion) * 4\ncat(\"4. Con intervención (reducción 30%):\\n\")\n\n\n4. Con intervención (reducción 30%):\n\n\nCódigo\ncat(\"   Nuevos casos esperados por semana:\", lambda_intervencion, \"\\n\")\n\n\n   Nuevos casos esperados por semana: 2.94 \n\n\nCódigo\ncat(\"   Reducción esperada por mes:\", reduccion_casos_mes, \"casos\\n\")\n\n\n   Reducción esperada por mes: 5.04 casos\n\n\nCódigo\n# 5. Monitoreo de alertas\numbral_alerta &lt;- 7\nprob_alerta &lt;- 1 - ppois(umbral_alerta - 1, lambda_casos)\ncat(\"5. P(Alerta) = P(X ≥\", umbral_alerta, \") =\", round(prob_alerta, 4), \"\\n\")\n\n\n5. P(Alerta) = P(X ≥ 7 ) = 0.1325 \n\n\n\n\nCódigo\n# Comparación antes y después de intervención\nk_epi &lt;- 0:15\nprob_antes &lt;- dpois(k_epi, lambda_casos)\nprob_despues &lt;- dpois(k_epi, lambda_intervencion)\n\ndata_epi &lt;- data.frame(\n  casos = rep(k_epi, 2),\n  probabilidad = c(prob_antes, prob_despues),\n  escenario = rep(c(\"Sin intervención\", \"Con intervención\"), each = length(k_epi))\n)\n\nggplot(data_epi, aes(x = casos, y = probabilidad, fill = escenario)) +\n  geom_col(position = \"dodge\", alpha = 0.8) +\n  geom_vline(xintercept = umbral_alerta - 0.5, linetype = \"dashed\", color = \"red\") +\n  labs(title = \"Impacto de Intervención en Salud Pública\",\n       subtitle = paste(\"Reducción del 30% en la incidencia (λ:\", lambda_casos, \"→\", lambda_intervencion, \")\"),\n       x = \"Número de casos nuevos por semana\",\n       y = \"Probabilidad\",\n       fill = \"Escenario\",\n       caption = \"Línea roja: umbral de alerta\") +\n  theme_minimal() +\n  scale_fill_manual(values = c(\"Sin intervención\" = \"#E74C3C\", \"Con intervención\" = \"#2ECC71\"))\n\n\n\n\n\nAnálisis epidemiológico con y sin intervención",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Distribución Poisson</span>"
    ]
  },
  {
    "objectID": "poisson.html#ejercicios-propuestos",
    "href": "poisson.html#ejercicios-propuestos",
    "title": "7  Distribución Poisson",
    "section": "7.10 Ejercicios Propuestos",
    "text": "7.10 Ejercicios Propuestos\n\nEjercicio 7.1 Un centro de atención telefónica recibe llamadas siguiendo una distribución de Poisson con una tasa promedio de 6 llamadas por minuto.\nPreguntas:\n\n¿Cuál es la probabilidad de recibir exactamente 4 llamadas en un minuto?\n¿Cuál es la probabilidad de no recibir ninguna llamada en 30 segundos?\n¿Cuál es el número esperado de llamadas en una hora?\n¿Cuál es la probabilidad de recibir entre 8 y 12 llamadas (inclusive) en dos minutos?\n\n\n\nCódigo\nlambda_min &lt;- 6\n\n# a) P(X = 4) en 1 minuto\ndpois(4, lambda = lambda_min)\n\n\n[1] 0.1338526\n\n\nCódigo\n# b) P(X = 0) en 30 segundos (lambda = 6*0.5)\ndpois(0, lambda = lambda_min*0.5)\n\n\n[1] 0.04978707\n\n\nCódigo\n# c) Número esperado de llamadas en 1 hora (60 min)\nlambda_hora &lt;- lambda_min * 60\nE_llamadas_hora &lt;- lambda_hora\nE_llamadas_hora\n\n\n[1] 360\n\n\nCódigo\n# d) P(8 &lt;= X &lt;= 12) en 2 minutos (lambda = 6*2)\nlambda_2min &lt;- lambda_min * 2\nsum(dpois(8:12, lambda = lambda_2min))\n\n\n[1] 0.4864608\n\n\n\n\nEjercicio 7.2 Una línea de producción tiene en promedio 1.5 defectos por cada 100 productos fabricados.\nPreguntas:\n\nSi se fabrican 500 productos, ¿cuál es la probabilidad de tener exactamente 8 defectos?\n¿Cuál es la probabilidad de tener 10 o más defectos en 500 productos?\n¿Cuántos productos se deben fabricar para que la probabilidad de tener al menos un defecto sea de 0.95?\nSi la empresa mejora el proceso y reduce los defectos a 1.2 por cada 100 productos, ¿cuál sería la nueva probabilidad de tener 10 o más defectos en 500 productos?\n\n\n\nCódigo\n# Parámetros originales\nlambda_prod &lt;- 0.015\nn &lt;- 500\nlambda &lt;- lambda_prod * n\n\n# a) P(X=8)\ndpois(8, lambda)\n\n\n[1] 0.1373286\n\n\nCódigo\n# b) P(X&gt;=10)\n1 - ppois(9, lambda)\n\n\n[1] 0.2235924\n\n\nCódigo\n# c) Número de productos para P(al menos 1 defecto) = 0.95\nn_req &lt;- -log(0.05)/lambda_prod\nn_req\n\n\n[1] 199.7155\n\n\nCódigo\n# d) Nueva tasa: 1.2 defectos por 100 productos\nlambda_nuevo &lt;- 500 * 0.012\n1 - ppois(9, lambda_nuevo)\n\n\n[1] 0.08392402\n\n\n\n\nEjercicio 7.3 El servicio de urgencias de un hospital recibe pacientes según un proceso de Poisson con una tasa promedio de 2.5 pacientes por hora durante la noche.\nPreguntas:\n\n¿Cuál es la probabilidad de que lleguen exactamente 3 pacientes en una hora?\n¿Cuál es la probabilidad de que no llegue ningún paciente en 2 horas consecutivas?\nEl hospital tiene capacidad para atender 8 pacientes por turno de 4 horas. ¿Cuál es la probabilidad de superar esta capacidad?\n¿Cuál debería ser la capacidad mínima para que la probabilidad de saturación sea menor al 10% en un turno de 4 horas?\n\n\n\nCódigo\nlambda &lt;- 2.5\n\n# a) Exactamente 3 pacientes en 1 hora\ndpois(3, lambda = lambda * 1)\n\n\n[1] 0.213763\n\n\nCódigo\n# b) Ningún paciente en 2 horas\ndpois(0, lambda = lambda * 2)\n\n\n[1] 0.006737947\n\n\nCódigo\n# c) Probabilidad de superar capacidad 8 en 4 horas\nlambda4 &lt;- lambda * 4\n1 - ppois(8, lambda4)\n\n\n[1] 0.6671803\n\n\nCódigo\n# d) Capacidad mínima para que P(saturación) &lt; 0.1\nqpois(0.9, lambda4)  # devuelve k tal que P(X &lt;= k) &gt;= 0.9\n\n\n[1] 14\n\n\n\n\nEjercicio 7.4 Implementa una verificación completa del Teorema Central del Límite para una distribución Poisson con \\(\\lambda = 7\\).\n\n\nCódigo\nset.seed(123)\n\n# Parámetros\nlambda &lt;- 7       # Poisson original\nn &lt;- 30           # tamaño de cada muestra\nn_sim &lt;- 10000    # número de repeticiones para el TCL\n\n# Paso 1: Simular n_sim promedios de muestras de tamaño n\npromedios &lt;- replicate(n_sim, mean(rpois(n, lambda)))\n\n# Paso 2: Estadísticos teóricos del promedio\nmu_teo &lt;- lambda\nsigma_teo &lt;- sqrt(lambda / n)\n\ncat(\"Media teórica del promedio:\", mu_teo, \"\\n\")\n\n\nMedia teórica del promedio: 7 \n\n\nCódigo\ncat(\"Desviación estándar teórica del promedio:\", round(sigma_teo,4), \"\\n\\n\")\n\n\nDesviación estándar teórica del promedio: 0.483 \n\n\nCódigo\n# Paso 3: Comparación gráfica\nhist(promedios, probability = TRUE, breaks = 30,\n     main = paste(\"Verificación TCL para Poisson(λ=\", lambda, \"), n=\", n),\n     xlab = \"Promedio muestral\", col = \"lightblue\", border = \"white\")\n\n# Agregar curva normal teórica\nx_vals &lt;- seq(min(promedios), max(promedios), length.out = 200)\nlines(x_vals, dnorm(x_vals, mean = mu_teo, sd = sigma_teo), col = \"red\", lwd = 2)\n\nlegend(\"topright\", legend = c(\"Histograma muestral\", \"Normal teórica\"),\n       fill = c(\"lightblue\", NA), border = c(\"white\", NA),\n       lty = c(NA,1), col = c(NA,\"red\"), lwd=c(NA,2))\n\n\n\n\n\n\n\n\n\nCódigo\n# Media y varianza empírica de los promedios\nmean(promedios)\n\n\n[1] 7.00034\n\n\nCódigo\nvar(promedios)\n\n\n[1] 0.2335112\n\n\nCódigo\nsd(promedios)\n\n\n[1] 0.48323\n\n\nCódigo\n# Comparación con valores teóricos\ncat(\"Media empírica:\", mean(promedios), \"\\n\")\n\n\nMedia empírica: 7.00034 \n\n\nCódigo\ncat(\"Varianza empírica:\", var(promedios), \" (teórica:\", sigma_teo^2, \")\\n\")\n\n\nVarianza empírica: 0.2335112  (teórica: 0.2333333 )\n\n\n\n\nEjercicio 7.5 Verifica por simulación que si \\(X_1 \\sim \\text{Poisson}(3.5)\\) y \\(X_2 \\sim \\text{Poisson}(2.8)\\) son independientes, entonces \\(X_1 + X_2 \\sim \\text{Poisson}(6.3)\\).\nPasos específicos:\n\nGenerar 10,000 muestras de cada distribución y calcule su suma\nComparar las estadísticas de la suma con una Poisson(6.3) directa\nExtienda la verificación a la suma de 4 variables Poisson independientes\n\n\n\nCódigo\nset.seed(123)\n\n# Parámetros\nlambda1 &lt;- 3.5\nlambda2 &lt;- 2.8\nn_sim &lt;- 10000\n\n# a) Generar muestras y calcular la suma\nX1 &lt;- rpois(n_sim, lambda1)\nX2 &lt;- rpois(n_sim, lambda2)\nSuma_X &lt;- X1 + X2\n\n# Estadísticos empíricos\nmean_Suma &lt;- mean(Suma_X)\nvar_Suma &lt;- var(Suma_X)\n\ncat(\"Media empírica de la suma:\", mean_Suma, \"\\n\")\n\n\nMedia empírica de la suma: 6.2582 \n\n\nCódigo\ncat(\"Varianza empírica de la suma:\", var_Suma, \"\\n\")\n\n\nVarianza empírica de la suma: 6.112744 \n\n\nCódigo\n# b) Comparar con Poisson(6.3) directa\nSuma_Poisson &lt;- rpois(n_sim, lambda1 + lambda2)\nmean_Pois &lt;- mean(Suma_Poisson)\nvar_Pois &lt;- var(Suma_Poisson)\n\ncat(\"Media Poisson(6.3) directa:\", mean_Pois, \"\\n\")\n\n\nMedia Poisson(6.3) directa: 6.296 \n\n\nCódigo\ncat(\"Varianza Poisson(6.3) directa:\", var_Pois, \"\\n\")\n\n\nVarianza Poisson(6.3) directa: 6.309015 \n\n\nCódigo\n# Gráfico comparativo\nhist(Suma_X, breaks = 0:max(Suma_X), freq = FALSE, col = \"skyblue\", border=\"white\",\n     main = \"Suma X1+X2 vs Poisson(6.3)\", xlab = \"Valor\")\nlines(0:max(Suma_X), dpois(0:max(Suma_X), lambda1+lambda2), type = \"b\", col = \"red\", lwd = 2, pch=19)\nlegend(\"topright\", legend = c(\"Simulación X1+X2\",\"Poisson teórica\"), col = c(\"skyblue\",\"red\"), \n       lwd=c(NA,2), pch=c(NA,19), bty=\"n\")\n\n\n\n\n\n\n\n\n\nCódigo\nlambda3 &lt;- 1.2\nlambda4 &lt;- 0.8\n\n# Generar 4 Poisson independientes\nX3 &lt;- rpois(n_sim, lambda3)\nX4 &lt;- rpois(n_sim, lambda4)\n\nSuma_4 &lt;- X1 + X2 + X3 + X4\n\n# Estadísticos empíricos\nmean_Suma4 &lt;- mean(Suma_4)\nvar_Suma4 &lt;- var(Suma_4)\ncat(\"Media empírica suma 4 Poisson:\", mean_Suma4, \"\\n\")\n\n\nMedia empírica suma 4 Poisson: 8.2409 \n\n\nCódigo\ncat(\"Varianza empírica suma 4 Poisson:\", var_Suma4, \"\\n\")\n\n\nVarianza empírica suma 4 Poisson: 8.218289 \n\n\nCódigo\n# Comparación con Poisson teórica\nlambda_total &lt;- lambda1 + lambda2 + lambda3 + lambda4\nSuma4_Poisson &lt;- rpois(n_sim, lambda_total)\nmean_Pois4 &lt;- mean(Suma4_Poisson)\nvar_Pois4 &lt;- var(Suma4_Poisson)\ncat(\"Media Poisson(8.3):\", mean_Pois4, \"\\n\")\n\n\nMedia Poisson(8.3): 8.3313 \n\n\nCódigo\ncat(\"Varianza Poisson(8.3):\", var_Pois4, \"\\n\")\n\n\nVarianza Poisson(8.3): 8.39378 \n\n\nCódigo\n# Gráfico\nhist(Suma_4, breaks=0:max(Suma_4), freq=FALSE, col=\"lightgreen\", border=\"white\",\n     main=\"Suma de 4 Poisson vs Poisson(8.3)\", xlab=\"Valor\")\nlines(0:max(Suma_4), dpois(0:max(Suma_4), lambda_total), type=\"b\", col=\"red\", lwd=2, pch=19)\nlegend(\"topright\", legend=c(\"Simulación suma 4 Poisson\",\"Poisson teórica\"), col=c(\"lightgreen\",\"red\"),\n       lwd=c(NA,2), pch=c(NA,19), bty=\"n\")\n\n\n\n\n\n\n\n\n\n\n\nEjercicio 7.6 Un sitio web recibe en promedio 15 visitantes por minuto durante las horas pico. El servidor puede manejar hasta 25 solicitudes simultáneas sin degradación del rendimiento.\nAnálisis requerido:\n\n¿Cuál es la probabilidad de que en un minuto el servidor experimente degradación?\nSi se duplica la capacidad del servidor (50 solicitudes), ¿cómo cambia la probabilidad de degradación?\n¿Cuál sería la capacidad óptima del servidor para que la probabilidad de degradación sea menor al 1%?\nSimule el comportamiento del servidor durante una hora (60 minutos) y calcule el porcentaje de tiempo con degradación.\n\n\n\nCódigo\nlambda &lt;- 15\ncapacidad &lt;- 25\n\n# a) Probabilidad de degradación\nprob_degrad &lt;- 1 - ppois(capacidad, lambda)\ncat(\"Probabilidad de degradación (cap 25):\", prob_degrad, \"\\n\")\n\n\nProbabilidad de degradación (cap 25): 0.006184904 \n\n\nCódigo\n# b) Probabilidad con capacidad duplicada\ncapacidad2 &lt;- 50\nprob_degrad2 &lt;- 1 - ppois(capacidad2, lambda)\ncat(\"Probabilidad de degradación (cap 50):\", prob_degrad2, \"\\n\")\n\n\nProbabilidad de degradación (cap 50): 2.643441e-13 \n\n\nCódigo\n# c) Capacidad óptima para P(degradación)&lt;0.01\ncap_optima &lt;- qpois(0.99, lambda)\ncat(\"Capacidad óptima:\", cap_optima, \"\\n\")\n\n\nCapacidad óptima: 25 \n\n\nCódigo\n# d) Simulación de 1 hora\nset.seed(123)\nn_minutos &lt;- 60\nvisitantes &lt;- rpois(n_minutos, lambda)\nporc_degrad &lt;- sum(visitantes &gt; capacidad) / n_minutos * 100\ncat(\"Porcentaje de minutos con degradación:\", round(porc_degrad,4), \"%\\n\")\n\n\nPorcentaje de minutos con degradación: 0 %\n\n\n\n\nEjercicio 7.7 Una tienda registra que el número de cierto producto vendido por día sigue una distribución Poisson con \\(\\lambda = 8\\).\nProblemas de optimización:\n\nSi la tienda mantiene un inventario de 12 unidades al inicio del día, ¿cuál es la probabilidad de quedarse sin existencias?\n¿Cuántas unidades debe tener para que la probabilidad de agotarse sea menor al 5%?\nCalcule el costo esperado diario si:\n\nCada unidad no vendida cuesta $2 mantenerla en inventario\nCada venta perdida por falta de stock cuesta $15\nEl costo de adquisición es $10 por unidad\n\nDetermine el nivel óptimo de inventario que minimiza el costo total esperado.\n\n\n\nCódigo\nlambda &lt;- 8\ninventario &lt;- 12\nprob_sin_stock &lt;- 1 - ppois(inventario, lambda)\nprob_sin_stock\n\n\n[1] 0.0637972\n\n\nCódigo\ninventario_opt &lt;- qpois(0.95, lambda)\ninventario_opt\n\n\n[1] 13\n\n\nCódigo\nx_max &lt;- 30\nx_vals &lt;- 0:x_max\npx &lt;- dpois(x_vals, lambda)\n\n# Inventario = 12\nI &lt;- 12\nexceso &lt;- sum(pmax(I - x_vals, 0) * px)\nfalta &lt;- sum(pmax(x_vals - I, 0) * px)\ncosto_total &lt;- 2*exceso + 15*falta + 10*I\ncosto_total\n\n\n[1] 130.207\n\n\nCódigo\ninventarios &lt;- 0:20\ncostos_totales &lt;- numeric(length(inventarios))\n\nfor(i in inventarios){\n  exceso &lt;- sum(pmax(i - x_vals, 0) * px)\n  falta &lt;- sum(pmax(x_vals - i, 0) * px)\n  costos_totales[i+1] &lt;- 2*exceso + 15*falta + 10*i\n}\n\n# Inventario óptimo\nI_min &lt;- inventarios[which.min(costos_totales)]\ncosto_min &lt;- min(costos_totales)\ncat(\"Inventario óptimo:\", I_min, \"\\n\")\n\n\nInventario óptimo: 6 \n\n\nCódigo\ncat(\"Costo total mínimo esperado:\", round(costo_min,2), \"\\n\")\n\n\nCosto total mínimo esperado: 95.96 \n\n\nCódigo\n# Gráfico de costo vs inventario\nplot(inventarios, costos_totales, type=\"b\", pch=19, col=\"blue\",\n     xlab=\"Inventario\", ylab=\"Costo total esperado\",\n     main=\"Optimización de inventario\")\nabline(v=I_min, col=\"red\", lty=2)",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Distribución Poisson</span>"
    ]
  },
  {
    "objectID": "TCL.html#notación",
    "href": "TCL.html#notación",
    "title": "1  Teorema Central del Límite (TCL)",
    "section": "1.1 Notación",
    "text": "1.1 Notación\nConvergencia en Distribución\nEl símbolo \\(\\xrightarrow{d}\\) denota convergencia en distribución (también llamada convergencia en ley o convergencia débil), lo que significa:\n\\[\\lim_{n \\to \\infty} P\\left(\\frac{S_n - n\\mu}{\\sigma\\sqrt{n}} \\leq x\\right) = \\Phi(x)\\]\ndonde \\(\\Phi(x)\\) es la función de distribución (o de probabilidad acumulada) de la distribución normal estándar.\nParámetros Importantes\n\n\\(\\mu\\): Media poblacional de cada \\(X_i\\)\n\\(\\sigma^2\\): Varianza poblacional de cada \\(X_i\\)\n\n\\(\\sigma\\): Desviación estándar poblacional\n\\(n\\): Tamaño de muestra\n\\(\\sigma/\\sqrt{n}\\): Error estándar de la media muestral",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Teorema Central del Límite (TCL)</span>"
    ]
  },
  {
    "objectID": "TCL.html#condiciones-del-teorema",
    "href": "TCL.html#condiciones-del-teorema",
    "title": "1  Teorema Central del Límite (TCL)",
    "section": "1.2 Condiciones del Teorema",
    "text": "1.2 Condiciones del Teorema\nPara que el Teorema Central del Límite se aplique, se requieren las siguientes condiciones:\n1. Independencia\nLas variables aleatorias \\(X_1, X_2, \\ldots, X_n\\) deben ser independientes. Esto significa que el resultado de una variable no influye en el resultado de las otras.\n2. Distribución Idéntica\nTodas las variables deben seguir la misma distribución, es decir: \\[X_i \\sim F \\quad \\text{para todo } i\\]\ndonde \\(F\\) es alguna distribución de probabilidad.\n3. Momentos Finitos\nLa distribución común debe tener:\n\nMedia finita: \\(E(X_i) = \\mu &lt; \\infty\\)\nVarianza finita: \\(\\text{Var}(X_i) = \\sigma^2 &lt; \\infty\\)\n\n4. Tamaño de Muestra Suficiente\nEn la práctica, \\(n\\) debe ser “suficientemente grande”. Una regla práctica común es \\(n \\geq 30\\), aunque esto puede variar según la distribución original.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Teorema Central del Límite (TCL)</span>"
    ]
  },
  {
    "objectID": "TCL.html#interpretación-del-teorema",
    "href": "TCL.html#interpretación-del-teorema",
    "title": "1  Teorema Central del Límite (TCL)",
    "section": "1.3 Interpretación del Teorema",
    "text": "1.3 Interpretación del Teorema\n\nUniversalidad: Sin importar cuál sea la distribución original de las \\(X_i\\) (uniforme, exponencial, binomial, etc.), la suma o media se aproxima a una distribución normal.\nMejora con el tamaño: La aproximación normal mejora conforme \\(n\\) aumenta.\nCentralización: La media de la distribución límite es \\(\\mu\\) (la media poblacional).\nReducción de variabilidad: La varianza de la media muestral es \\(\\sigma^2/n\\), que decrece con \\(n\\).\n\nFormulación Práctica\nPara valores grandes de \\(n\\), podemos escribir aproximadamente: \\[S_n \\sim N(n\\mu, n\\sigma^2)\\] \\[\\bar{X}_n \\sim N\\left(\\mu, \\frac{\\sigma^2}{n}\\right)\\]",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Teorema Central del Límite (TCL)</span>"
    ]
  },
  {
    "objectID": "TCL.html#importancia-y-aplicaciones",
    "href": "TCL.html#importancia-y-aplicaciones",
    "title": "1  Teorema Central del Límite (TCL)",
    "section": "1.4 Importancia y Aplicaciones",
    "text": "1.4 Importancia y Aplicaciones\nEl TCL explica varios fenómenos importantes en estadística:\n\nErrores de medición: Tienden a seguir distribución normal\nMedias muestrales: Son aproximadamente normales para muestras grandes\nTests estadísticos: Los basados en normalidad funcionan bien con muestras grandes\nIntervalos de confianza: Su construcción se basa en el TCL",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Teorema Central del Límite (TCL)</span>"
    ]
  },
  {
    "objectID": "uniforme_discreta.html",
    "href": "uniforme_discreta.html",
    "title": "2  Distribución Uniforme Discreta",
    "section": "",
    "text": "2.1 Características Principales\nFunción de Probabilidad\n\\[\\begin{equation}\nf(x) = P(X = x) = \\begin{cases}\n\\frac{1}{n} & \\text{si } x \\in \\{x_1, x_2, \\ldots, x_n\\} \\\\\n0 & \\text{en otro caso}\n\\end{cases}\n\\end{equation}\\]\nFunción de Distribución (Probabilidad Acumulada)\nSuponiendo que los valores \\(x_1, x_2, \\ldots, x_n\\) son \\(n\\) enteros consecutivos, tenemos:\n\\[\\begin{equation}\nF(x) = P(X \\leq x) = \\begin{cases}\n0 & \\text{si } x &lt; x_1 \\\\\n\\frac{\\lfloor x \\rfloor - x_1 + 1}{x_n-x_1+1} & \\text{si } x_1 \\leq x \\leq x_n \\\\\n1 & \\text{si } x &gt; x_n\n\\end{cases}\n\\end{equation}\\]\nParámetros Estadísticos\nEsperanza (Media):\n\\[\\begin{equation}\nE(X) = \\frac{1}{n}\\sum_{i=1}^n x_i = \\mu\n\\end{equation}\\]\nVarianza:\n\\[\\begin{equation}\n\\text{Var}(X) = \\frac{1}{n}\\sum_{i=1}^n (x_i-\\mu)^2\n\\end{equation}\\]",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Distribución Uniforme Discreta</span>"
    ]
  },
  {
    "objectID": "uniforme_discreta.html#ejemplos-y-aplicaciones",
    "href": "uniforme_discreta.html#ejemplos-y-aplicaciones",
    "title": "2  Distribución Uniforme Discreta",
    "section": "2.2 Ejemplos y Aplicaciones",
    "text": "2.2 Ejemplos y Aplicaciones\n\nEjemplo 2.1 (Lanzamiento de un dado) Un dado justo representa una distribución \\(X\\sim \\text{unif} \\{1, 2, 3, 4, 5, 6\\}\\).\n\n\nCódigo\n# Parámetros del dado\nx_1 &lt;- 1\nx_6 &lt;- 6\nvalores &lt;- x_1:x_6\nprobabilidades &lt;- rep(1/length(valores), length(valores))\n\n# Crear data frame\ndado_data &lt;- data.frame(\n  Valor = valores,\n  Probabilidad = probabilidades\n)\n\n# Mostrar tabla\nkable(dado_data, \n      caption = \"Distribución de probabilidad de un dado\",\n      align = \"cc\") %&gt;%\n  kable_styling(bootstrap_options = \"striped\")\n\n\n\nDistribución de probabilidad de un dado\n\n\nValor\nProbabilidad\n\n\n\n\n1\n0.1666667\n\n\n2\n0.1666667\n\n\n3\n0.1666667\n\n\n4\n0.1666667\n\n\n5\n0.1666667\n\n\n6\n0.1666667\n\n\n\n\n\n\n\nCálculo de parámetros:\n\n\nCódigo\n# Media\nmedia &lt;- sum(dado_data$Valor)/length(dado_data$Valor)\ncat(\"Media:\", media, \"\\n\")\n\n\nMedia: 3.5 \n\n\nCódigo\n# Varianza\nvarianza &lt;- sum((dado_data$Valor- media)^2)/length(dado_data$Valor)\ncat(\"Varianza:\", varianza, \"\\n\")\n\n\nVarianza: 2.916667 \n\n\nCódigo\n# Desviación estándar\ndesv_std &lt;- sqrt(varianza)\ncat(\"Desviación estándar:\", round(desv_std, 4), \"\\n\")\n\n\nDesviación estándar: 1.7078 \n\n\n\n2.2.1 Visualización\n\n\nCódigo\nggplot(dado_data, aes(x = Valor, y = Probabilidad)) +\n  geom_col(fill = \"steelblue\", alpha = 0.7, width = 0.6) +\n  geom_text(aes(label = round(Probabilidad, 3)), vjust = -0.5) +\n  scale_x_continuous(breaks = valores) +\n  scale_y_continuous(limits = c(0, 0.20)) +\n  labs(title = \"Distribución Uniforme Discreta - Dado\",\n       x = \"Valor\",\n       y = \"Probabilidad\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5))\n\n\n\n\n\nFunción de probabilidad de un dado\n\n\n\n\n\n\n\nEjemplo 2.2 (Selección aleatoria de números) Supongamos que seleccionamos aleatoriamente un número entero entre 10 y 20 (inclusive).\nCálculo de parámetros:\n\n\nCódigo\nx2_1 &lt;- 10\nx2_n &lt;- 20\nvalores2 &lt;- x2_1:x2_n\nprobabilidades2 &lt;- rep(1/(length(valores2)), length(valores2))\n\n# Data_frame\ndata2 &lt;- data.frame(\n  Valor = valores2,\n  Probabilidad = probabilidades2\n)\n\n# Parámetros estadísticos\nmedia2 &lt;- mean(data2$Valor)\nvarianza2 &lt;- sum((data2$Valor - media2)^2)/length(data2$Valor)\ndesv_std2 &lt;- sqrt(varianza2)\n\ncat(\"Media:\", media2, \"\\n\")\n\n\nMedia: 15 \n\n\nCódigo\ncat(\"Varianza:\", round(varianza2, 4), \"\\n\")\n\n\nVarianza: 10 \n\n\nCódigo\ncat(\"Desviación estándar:\", round(desv_std2, 4), \"\\n\")\n\n\nDesviación estándar: 3.1623 \n\n\nVisualización de la función de probabilidad:\n\n\nCódigo\nggplot(data2, aes(x = Valor, y = Probabilidad)) +\n  geom_col(fill = \"darkgreen\", alpha = 0.7, width = 0.8) +\n  geom_text(aes(label = round(Probabilidad, 3)), \n            vjust = -0.5, size = 3) +\n  scale_x_continuous(breaks = seq(10, 20, 1)) +\n  labs(title = \"Distribución Uniforme Discreta\",\n       x = \"Valor\",\n       y = \"Probabilidad\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5))\n\n\n\n\n\nDistribución uniforme discreta entre 10 y 20\n\n\n\n\n\n\nEjemplo 2.3 (Simulación en R) Generación de números aleatorios de una variable aleatoria \\(X\\sim unif\\{1, 2, 3, 4, 5, 6\\}\\) y comparación con las probabilidades teóricas.\n\n\nCódigo\n# Generar 1000 números aleatorios\nset.seed(123)\nn_sim &lt;- 1000\nmuestra &lt;- sample(1:6, n_sim, replace = TRUE)\n\n# Frecuencias observadas\nfreq_obs &lt;- table(muestra)\nfreq_rel &lt;- prop.table(freq_obs)\n\n# Comparar con probabilidades teóricas\ncomparacion &lt;- data.frame(\n  Valor = 1:6,\n  Prob_Teorica = rep(1/6, 6),\n  Freq_Observada = as.numeric(freq_rel)\n)\n\nkable(comparacion, \n      caption = \"Comparación entre probabilidades teóricas y observadas\",\n      col.names = c(\"Valor\", \"Prob. Teórica\", \"Freq. Observada\"),\n      digits = 4) |&gt; \n  kable_styling(bootstrap_options = \"striped\")\n\n\n\nComparación entre probabilidades teóricas y observadas\n\n\nValor\nProb. Teórica\nFreq. Observada\n\n\n\n\n1\n0.1667\n0.170\n\n\n2\n0.1667\n0.176\n\n\n3\n0.1667\n0.171\n\n\n4\n0.1667\n0.157\n\n\n5\n0.1667\n0.162\n\n\n6\n0.1667\n0.164\n\n\n\n\n\n\n\n\nVisualización de la simulación\n\n\nCódigo\n# Preparar datos para el gráfico\ncomp_long &lt;- comparacion |&gt; \n  pivot_longer(cols = c(Prob_Teorica, Freq_Observada),\n               names_to = \"Tipo\",\n               values_to = \"Probabilidad\") |&gt; \n  mutate(Tipo = case_when(\n    Tipo == \"Prob_Teorica\" ~ \"Teórica\",\n    Tipo == \"Freq_Observada\" ~ \"Observada\"\n  ))\n\nggplot(comp_long, aes(x = Valor, y = Probabilidad, fill = Tipo)) +\n  geom_col(position = \"dodge\", alpha = 0.7) +\n  scale_x_continuous(breaks = 1:6) +\n  scale_fill_manual(values = c(\"Teórica\" = \"blue\", \"Observada\" = \"red\")) +\n  labs(title = paste(\"Simulación con\", n_sim, \"observaciones\"),\n       x = \"Valor\",\n       y = \"Probabilidad\",\n       fill = \"Distribución\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5),\n        legend.position = \"bottom\")\n\n\n\n\n\nComparación entre distribución teórica y simulada",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Distribución Uniforme Discreta</span>"
    ]
  },
  {
    "objectID": "uniforme_discreta.html#aplicaciones-prácticas",
    "href": "uniforme_discreta.html#aplicaciones-prácticas",
    "title": "2  Distribución Uniforme Discreta",
    "section": "2.3 Aplicaciones Prácticas",
    "text": "2.3 Aplicaciones Prácticas\nLa distribución uniforme discreta tiene múltiples aplicaciones:\n\nJuegos de azar: Dados, ruletas, sorteos\nMuestreo: Selección aleatoria de elementos\nSimulación: Generación de números aleatorios equiprobables\nInvestigación: Asignación aleatoria de tratamientos",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Distribución Uniforme Discreta</span>"
    ]
  },
  {
    "objectID": "uniforme_discreta.html#propiedades-importantes",
    "href": "uniforme_discreta.html#propiedades-importantes",
    "title": "2  Distribución Uniforme Discreta",
    "section": "2.4 Propiedades Importantes",
    "text": "2.4 Propiedades Importantes\n\n2.4.1 Relación con otras distribuciones\n\nCaso especial de la distribución categórica con probabilidades iguales\nLímite discreto de la distribución uniforme continua\nBase para generar otras distribuciones discretas\n\n\n\n2.4.2 Teorema Central del Límite\nVerifiquemos el Teorema Central del Límite mediante simulación para el caso de variables aleatorias con distribución uniforme discreta.\nGeneraremos \\(k=1000\\) muestras cada una de tamaño \\(n=30\\) de una distribución uniforme discreta en el conjunto \\(\\{1, 2, 3, 4, 5, 6\\}\\) y observaremos la distribución de sus medias muestrales. En el Ejemplo 2.1 se obtuvo que para \\(X\\sim \\text{unif}\\{1, 2, 3, 4, 5, 6\\}\\) tenemos \\(\\mu=7/2\\) y \\(\\sigma^2= 35/12\\), luego la media muestral:\n\\[\\bar{X}_{30}=\\frac{1}{30}\\sum_{i=1}^{30} X_i\\] Tendrá aproximadamente la siguiente distribución:\n\\[\\bar{X}_n \\sim N\\left(\\mu, \\frac{\\sigma^2}{n} \\right)\\]\nEs decir\n\\[\\bar{X}_{30} \\sim N\\left(\\frac{7}{2}, \\frac{7}{72} \\right)\\]\n\n\nCódigo\n# Simular medias muestrales\nset.seed(456)\nk_muestra &lt;- 1000\nn_muestra &lt;- 30\n\nmedias_muestrales &lt;- replicate(k_muestra, {\n  muestra &lt;- sample(1:6, n_muestra, replace = TRUE)\n  mean(muestra)\n})\n\n# Crear histograma\nhist_data &lt;- data.frame(Medias = medias_muestrales)\n\nggplot(hist_data) +\n  geom_histogram(aes(x=Medias, after_stat(density)), bins = 30, \n                 fill = \"lightblue\", alpha = 0.7, color = \"black\") +\n  geom_density(aes(x = Medias), color = \"red\", linewidth = 1) +\n  geom_vline(xintercept = mean(medias_muestrales), \n             color = \"blue\", linetype = \"dashed\", linewidth = 1) +\n  labs(title = \"Distribución de Medias Muestrales\",\n       subtitle = paste(\"n =\", n_muestra, \" de una v.a. uniforme(1,6)\"),\n       x = \"Media Muestral\",\n       y = \"Densidad\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5))\n\n\n\n\n\nVerificación del Teorema del Límite Central\n\n\n\n\nCódigo\n# Estadísticas\ncat(\"Media teórica:\", (1+6)/2, \"\\n\")\n\n\nMedia teórica: 3.5 \n\n\nCódigo\ncat(\"Media observada:\", round(mean(medias_muestrales), 4), \"\\n\")\n\n\nMedia observada: 3.508 \n\n\nCódigo\ncat(\"Varianza teórica de la media:\", round(((6-1+1)^2-1)/12/n_muestra, 4), \"\\n\")\n\n\nVarianza teórica de la media: 0.0972 \n\n\nCódigo\ncat(\"Varianza observada de la media:\", round(var(medias_muestrales), 4), \"\\n\")\n\n\nVarianza observada de la media: 0.0938",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Distribución Uniforme Discreta</span>"
    ]
  },
  {
    "objectID": "uniforme_discreta.html#ejercicios-propuestos",
    "href": "uniforme_discreta.html#ejercicios-propuestos",
    "title": "2  Distribución Uniforme Discreta",
    "section": "2.5 Ejercicios Propuestos",
    "text": "2.5 Ejercicios Propuestos\n\nEjercicio 2.1 Una urna contiene 8 bolas numeradas del 1 al 8. Se extrae una bola al azar. Calcule la probabilidad de obtener un número par.\n\n\nCódigo\n# Definir el espacio muestral\nbolas &lt;- 1:8\n\n# Casos favorables: números pares\npares &lt;- bolas[bolas %% 2 == 0]\n\n# Calcular probabilidad\nprobabilidad_par &lt;- length(pares) / length(bolas)\n\n# Mostrar resultados\ncat(\"Números pares:\", pares, \"\\n\")\n\n\nNúmeros pares: 2 4 6 8 \n\n\nCódigo\ncat(\"Probabilidad de obtener un número par:\", probabilidad_par, \"\\n\")\n\n\nProbabilidad de obtener un número par: 0.5 \n\n\n\n\nEjercicio 2.2 En un juego, se selecciona aleatoriamente un número entero entre 5 y 15 (inclusive). Calcule la media y la varianza de esta distribución.\n\n\nCódigo\n# Definir el rango\nvalores &lt;- 5:15\n\n# Calcular media y varianza\nmedia &lt;- mean(valores)\nvarianza &lt;- var(valores) * (length(valores)-1)/length(valores) # ajusto a población\n\n# Resultados\ncat(\"Media:\", media, \"\\n\")\n\n\nMedia: 10 \n\n\nCódigo\ncat(\"Varianza:\", varianza, \"\\n\")\n\n\nVarianza: 10 \n\n\n\n\nEjercicio 2.3 Simule 500 observaciones de una distribución uniforme discreta en {0, 1, 2, 3, 4} y compare las frecuencias observadas con las teóricas.\n\n\nCódigo\nset.seed(123)  # para reproducibilidad\n\n# Simular 500 observaciones\nsimulacion &lt;- sample(0:4, size = 500, replace = TRUE)\n\n# Frecuencias observadas\nfrec_obs &lt;- table(simulacion)\n\n# Frecuencias teóricas\nfrec_esp &lt;- rep(500/5, 5)  # 500 observaciones, distribuidas uniformemente\n\n# Mostrar resultados\ncat(\"Frecuencias observadas:\\n\")\n\n\nFrecuencias observadas:\n\n\nCódigo\nprint(frec_obs)\n\n\nsimulacion\n  0   1   2   3   4 \n106 103  98  93 100 \n\n\nCódigo\ncat(\"\\nFrecuencias esperadas (teóricas):\\n\")\n\n\n\nFrecuencias esperadas (teóricas):\n\n\nCódigo\nprint(frec_esp)\n\n\n[1] 100 100 100 100 100\n\n\nCódigo\n# Comparación en una tabla\ncomparacion &lt;- data.frame(\n  Valor = 0:4,\n  Observada = as.numeric(frec_obs),\n  Teorica = frec_esp\n)\n\nprint(comparacion)\n\n\n  Valor Observada Teorica\n1     0       106     100\n2     1       103     100\n3     2        98     100\n4     3        93     100\n5     4       100     100\n\n\nCódigo\n# Gráfico de barras\nbarplot(rbind(comparacion$Observada, comparacion$Teorica), beside = TRUE,\n        names.arg = comparacion$Valor, col = c(\"skyblue\", \"tomato\"),\n        legend.text = c(\"Observada\", \"Teórica\"),\n        main = \"Comparación de frecuencias\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Distribución Uniforme Discreta</span>"
    ]
  },
  {
    "objectID": "bernoulli_binomial.html",
    "href": "bernoulli_binomial.html",
    "title": "3  Distribuciones Bernoulli y Binomial",
    "section": "",
    "text": "3.1 Distribución Bernoulli",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Distribuciones Bernoulli y Binomial</span>"
    ]
  },
  {
    "objectID": "bernoulli_binomial.html#distribución-bernoulli",
    "href": "bernoulli_binomial.html#distribución-bernoulli",
    "title": "3  Distribuciones Bernoulli y Binomial",
    "section": "",
    "text": "Definición 3.1 Una variable aleatoria \\(X\\) sigue una distribución de Bernoulli con parámetro \\(p\\) si puede tomar solo dos valores: 1 (éxito) con probabilidad \\(p\\) y 0 (fracaso) con probabilidad \\(1-p\\). La función de probabilidad está dada por:\n\\[\\begin{equation}\nf(x) = \\begin{cases}\n1-p & \\text{si } x = 0 \\\\\np & \\text{si } x = 1 \\\\\n0 & \\text{en otro caso}\n\\end{cases}\n\\end{equation}\\]\nO de forma compacta: \\(f(x) = p^x(1-p)^{1-x}\\) para \\(x \\in \\{0,1\\}\\)\nA una variable aleatoria con distribución Bernoulli la denotaremos como \\(X \\sim \\text{Bernoulli}(p)\\).",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Distribuciones Bernoulli y Binomial</span>"
    ]
  },
  {
    "objectID": "bernoulli_binomial.html#características-de-la-distribución-bernoulli",
    "href": "bernoulli_binomial.html#características-de-la-distribución-bernoulli",
    "title": "3  Distribuciones Bernoulli y Binomial",
    "section": "3.2 Características de la Distribución Bernoulli",
    "text": "3.2 Características de la Distribución Bernoulli\nParámetros\n\n\\(p\\): probabilidad de éxito, donde \\(0 \\leq p \\leq 1\\)\n\nParámetros Estadísticos\nEsperanza (Media):\n\\[\\begin{equation}\nE(X) = p\n\\end{equation}\\]\nVarianza:\n\\[\\begin{equation}\n\\text{Var}(X) = p(1-p)\n\\end{equation}\\]\nDesviación Estándar:\n\\[\\begin{equation}\n\\sigma = \\sqrt{p(1-p)}\n\\end{equation}\\]\nFunción de Distribución:\n\\[\\begin{equation}\nF(x) = \\begin{cases}\n0 & \\text{si } x &lt; 0 \\\\\n1-p & \\text{si } 0 \\leq x &lt; 1 \\\\\n1 & \\text{si } x \\geq 1\n\\end{cases}\n\\end{equation}\\]",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Distribuciones Bernoulli y Binomial</span>"
    ]
  },
  {
    "objectID": "bernoulli_binomial.html#ejemplos-de-bernoulli",
    "href": "bernoulli_binomial.html#ejemplos-de-bernoulli",
    "title": "3  Distribuciones Bernoulli y Binomial",
    "section": "3.3 Ejemplos de Bernoulli",
    "text": "3.3 Ejemplos de Bernoulli\n\n3.3.1 Lanzamiento de una moneda\nConsideremos el lanzamiento de una moneda justa, donde “Cara” se considera un éxito (1) y “Sello” un fracaso (0). La probabilidad de obtener cara es \\(p = 0.5\\).\n\n\nCódigo\n# Moneda justa\np_moneda &lt;- 0.5\n\n# Crear tabla de probabilidades\nbernoulli_moneda &lt;- data.frame(\n  Resultado = c(\"Sello (0)\", \"Cara (1)\"),\n  Valor = c(0, 1),\n  Probabilidad = c(1-p_moneda, p_moneda)\n)\n\nkable(bernoulli_moneda, \n      caption = \"Distribución Bernoulli - Moneda justa (p = 0.5)\",\n      align = \"ccc\") %&gt;%\n  kable_styling(bootstrap_options = \"striped\")\n\n\n\nDistribución Bernoulli - Moneda justa (p = 0.5)\n\n\nResultado\nValor\nProbabilidad\n\n\n\n\nSello (0)\n0\n0.5\n\n\nCara (1)\n1\n0.5\n\n\n\n\n\n\n\nCódigo\n# Parámetros\nmedia_moneda &lt;- p_moneda\nvarianza_moneda &lt;- p_moneda * (1 - p_moneda)\ndesv_std_moneda &lt;- sqrt(varianza_moneda)\n\ncat(\"Parámetros estadísticos:\\n\")\n\n\nParámetros estadísticos:\n\n\nCódigo\ncat(\"Media:\", media_moneda, \"\\n\")\n\n\nMedia: 0.5 \n\n\nCódigo\ncat(\"Varianza:\", varianza_moneda, \"\\n\")\n\n\nVarianza: 0.25 \n\n\nCódigo\ncat(\"Desviación estándar:\", desv_std_moneda, \"\\n\")\n\n\nDesviación estándar: 0.5 \n\n\n\n\n3.3.2 Variables aleatorias con diferentes probabilidades de éxito\nConsideremos variables aleatorias Bernoulli con diferentes valores de \\(p\\), como se muestra en la siguiente tabla:\n\n\nCódigo\n# Diferentes valores de p\np_values &lt;- c(0.1, 0.3, 0.5, 0.7, 0.9)\n\n# Crear data frame para visualización\nbernoulli_data &lt;- data.frame()\nfor(p in p_values) {\n  temp_data &lt;- data.frame(\n    p = paste(\"p =\", p),\n    x = c(0, 1),\n    probabilidad = c(1-p, p),\n    media = p,\n    varianza = p*(1-p)\n  )\n  bernoulli_data &lt;- rbind(bernoulli_data, temp_data)\n}\n\n# Tabla de parámetros\nparam_bernoulli &lt;- data.frame(\n  p = p_values,\n  Media = p_values,\n  Varianza = p_values * (1 - p_values),\n  Desv_Std = sqrt(p_values * (1 - p_values))\n)\n\nkable(param_bernoulli, \n      caption = \"Parámetros de la distribución Bernoulli para diferentes valores de p\",\n      digits = 4,\n      col.names = c(\"p\", \"Media\", \"Varianza\", \"Desv. Estándar\")) %&gt;%\n  kable_styling(bootstrap_options = \"striped\")\n\n\n\nParámetros de la distribución Bernoulli para diferentes valores de p\n\n\np\nMedia\nVarianza\nDesv. Estándar\n\n\n\n\n0.1\n0.1\n0.09\n0.3000\n\n\n0.3\n0.3\n0.21\n0.4583\n\n\n0.5\n0.5\n0.25\n0.5000\n\n\n0.7\n0.7\n0.21\n0.4583\n\n\n0.9\n0.9\n0.09\n0.3000\n\n\n\n\n\n\n\n\nVisualización\n\n\nCódigo\nggplot(bernoulli_data, aes(x = factor(x), y = probabilidad, fill = factor(x))) +\n  geom_col(alpha = 0.7) +\n  geom_text(aes(label = round(probabilidad, 2)), vjust = -0.3) +\n  facet_wrap(~p, ncol = 5) +\n  scale_fill_manual(values = c(\"0\" = \"red\", \"1\" = \"blue\")) +\n  labs(title = \"Distribución de Bernoulli para diferentes valores de p\",\n       x = \"Valor (0 = Fracaso, 1 = Éxito)\",\n       y = \"Probabilidad\",\n       fill = \"Resultado\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5),\n        legend.position = \"bottom\")\n\n\n\n\n\nDistribución Bernoulli para diferentes valores de p",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Distribuciones Bernoulli y Binomial</span>"
    ]
  },
  {
    "objectID": "bernoulli_binomial.html#distribución-binomial",
    "href": "bernoulli_binomial.html#distribución-binomial",
    "title": "3  Distribuciones Bernoulli y Binomial",
    "section": "3.4 Distribución Binomial",
    "text": "3.4 Distribución Binomial\n\nDefinición 3.2 Una variable aleatoria \\(X\\) sigue una distribución binomial con parámetros \\(n\\) y \\(p\\) si representa el número de éxitos en \\(n\\) ensayos independientes de Bernoulli, cada uno con probabilidad de éxito \\(p\\). La función de probabilidad está dada por: \\[f(x) = \\binom{n}{x} p^x (1-p)^{n-x}\\]\npara \\(x = 0, 1, 2, \\ldots, n\\), donde \\(\\binom{n}{x} = \\frac{n!}{x!(n-x)!}\\). A una varible aleatoria con distribución binomial la denotaremos como: \\[X \\sim \\text{Binomial}(n, p)\\]",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Distribuciones Bernoulli y Binomial</span>"
    ]
  },
  {
    "objectID": "bernoulli_binomial.html#características-de-la-distribución-binomial",
    "href": "bernoulli_binomial.html#características-de-la-distribución-binomial",
    "title": "3  Distribuciones Bernoulli y Binomial",
    "section": "3.5 Características de la Distribución Binomial",
    "text": "3.5 Características de la Distribución Binomial\nParámetros\n\n\\(n\\): número de ensayos (entero positivo)\n\\(p\\): probabilidad de éxito en cada ensayo, donde \\(0 \\leq p \\leq 1\\)\n\nParámetros Estadísticos\nEsperanza (Media): \\[E(X) = np\\]\nVarianza: \\[\\text{Var}(X) = np(1-p)\\]\nDesviación Estándar: \\[\\sigma = \\sqrt{np(1-p)}\\]\nFunción de Distribución (Probabilidad Acumulada): \\[F(x) = P(X \\leq x) = \\sum_{i=0}^{x} \\binom{n}{i} p^i (1-p)^{n-i}\\]",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Distribuciones Bernoulli y Binomial</span>"
    ]
  },
  {
    "objectID": "bernoulli_binomial.html#ejemplos-de-binomial",
    "href": "bernoulli_binomial.html#ejemplos-de-binomial",
    "title": "3  Distribuciones Bernoulli y Binomial",
    "section": "3.6 Ejemplos de Binomial",
    "text": "3.6 Ejemplos de Binomial\n\nEjemplo 3.1 (Lanzamiento de monedas) Supongamos que lanzamos una moneda justa 10 veces. Queremos encontrar la distribución del número de caras obtenidas.\n\n\nCódigo\n# Parámetros\nn_monedas &lt;- 10\np_monedas &lt;- 0.5\n\n# Calcular probabilidades\nk_values &lt;- 0:n_monedas\nprob_binomial &lt;- dbinom(k_values, n_monedas, p_monedas)\n\n# Crear data frame\nbinomial_monedas &lt;- data.frame(\n  Num_Caras = k_values,\n  Probabilidad = prob_binomial\n)\n\n# Mostrar tabla\nkable(binomial_monedas, \n      caption = paste(\"Distribución Binomial - 10 lanzamientos de moneda (n =\", n_monedas, \", p =\", p_monedas, \")\"),\n      digits = 4,\n      col.names = c(\"Número de Caras\", \"Probabilidad\")) %&gt;%\n  kable_styling(bootstrap_options = \"striped\")\n\n\n\nDistribución Binomial - 10 lanzamientos de moneda (n = 10 , p = 0.5 )\n\n\nNúmero de Caras\nProbabilidad\n\n\n\n\n0\n0.0010\n\n\n1\n0.0098\n\n\n2\n0.0439\n\n\n3\n0.1172\n\n\n4\n0.2051\n\n\n5\n0.2461\n\n\n6\n0.2051\n\n\n7\n0.1172\n\n\n8\n0.0439\n\n\n9\n0.0098\n\n\n10\n0.0010\n\n\n\n\n\n\n\nCódigo\n# Parámetros estadísticos\nmedia_monedas &lt;- n_monedas * p_monedas\nvarianza_monedas &lt;- n_monedas * p_monedas * (1 - p_monedas)\ndesv_std_monedas &lt;- sqrt(varianza_monedas)\n\ncat(\"\\nParámetros estadísticos:\\n\")\n\n\n\nParámetros estadísticos:\n\n\nCódigo\ncat(\"Media:\", media_monedas, \"\\n\")\n\n\nMedia: 5 \n\n\nCódigo\ncat(\"Varianza:\", varianza_monedas, \"\\n\")\n\n\nVarianza: 2.5 \n\n\nCódigo\ncat(\"Desviación estándar:\", round(desv_std_monedas, 4), \"\\n\")\n\n\nDesviación estándar: 1.5811 \n\n\nVisualización de la distribución binomial\n\n\nCódigo\nggplot(binomial_monedas, aes(x = Num_Caras, y = Probabilidad)) +\n  geom_col(fill = \"steelblue\", alpha = 0.7, width = 0.8) +\n  geom_text(aes(label = round(Probabilidad, 3)), vjust = -0.5, size = 3) +\n  geom_vline(xintercept = media_monedas, color = \"red\", linetype = \"dashed\", size = 1) +\n  annotate(\"text\", x = media_monedas + 2.5, y = max(prob_binomial) * 0.8, \n           label = paste(\"Media =\", media_monedas), color = \"red\") +\n  scale_x_continuous(breaks = k_values) +\n  labs(title = paste(\"Distribución Binomial(\", n_monedas, \",\", p_monedas, \")\"),\n       x = \"Número de Éxitos\",\n       y = \"Probabilidad\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\nDistribución Binomial - 10 lanzamientos de moneda\n\n\n\n\n\n\nEjemplo 3.2 (Control de calidad) Un proceso de manufactura produce artículos defectuosos con probabilidad 0.05. Se toman muestras de 20 artículos.\n\n\nCódigo\n# Parámetros\nn_articulos &lt;- 20\np_defecto &lt;- 0.05\n\n# Probabilidades\nk_defectos &lt;- 0:n_articulos\nprob_defectos &lt;- dbinom(k_defectos, n_articulos, p_defecto)\n\n# Crear data frame\ncalidad_data &lt;- data.frame(\n  Defectos = k_defectos,\n  Probabilidad = prob_defectos\n)\n\n# Filtrar probabilidades significativas (&gt; 0.001)\ncalidad_filtrada &lt;- calidad_data[calidad_data$Probabilidad &gt; 0.001, ]\n\nkable(calidad_filtrada, \n      caption = paste(\"Distribución Binomial - Control de calidad (n =\", n_articulos, \", p =\", p_defecto, \")\"),\n      digits = 4,\n      col.names = c(\"Número de Defectos\", \"Probabilidad\")) %&gt;%\n  kable_styling(bootstrap_options = \"striped\")\n\n\n\nDistribución Binomial - Control de calidad (n = 20 , p = 0.05 )\n\n\nNúmero de Defectos\nProbabilidad\n\n\n\n\n0\n0.3585\n\n\n1\n0.3774\n\n\n2\n0.1887\n\n\n3\n0.0596\n\n\n4\n0.0133\n\n\n5\n0.0022\n\n\n\n\n\n\n\nCódigo\n# Parámetros estadísticos\nmedia_defectos &lt;- n_articulos * p_defecto\nvarianza_defectos &lt;- n_articulos * p_defecto * (1 - p_defecto)\ndesv_std_defectos &lt;- sqrt(varianza_defectos)\n\ncat(\"Parámetros estadísticos:\\n\")\n\n\nParámetros estadísticos:\n\n\nCódigo\ncat(\"Media:\", media_defectos, \"\\n\")\n\n\nMedia: 1 \n\n\nCódigo\ncat(\"Varianza:\", round(varianza_defectos, 4), \"\\n\")\n\n\nVarianza: 0.95 \n\n\nCódigo\ncat(\"Desviación estándar:\", round(desv_std_defectos, 4), \"\\n\")\n\n\nDesviación estándar: 0.9747 \n\n\nCódigo\n# Probabilidades importantes\nprob_0_defectos &lt;- dbinom(0, n_articulos, p_defecto)\nprob_max_2_defectos &lt;- pbinom(2, n_articulos, p_defecto)\nprob_mas_3_defectos &lt;- 1 - pbinom(3, n_articulos, p_defecto)\n\ncat(\"\\nProbabilidades de interés:\\n\")\n\n\n\nProbabilidades de interés:\n\n\nCódigo\ncat(\"P(0 defectos):\", round(prob_0_defectos, 4), \"\\n\")\n\n\nP(0 defectos): 0.3585 \n\n\nCódigo\ncat(\"P(≤ 2 defectos):\", round(prob_max_2_defectos, 4), \"\\n\")\n\n\nP(≤ 2 defectos): 0.9245 \n\n\nCódigo\ncat(\"P(&gt; 3 defectos):\", round(prob_mas_3_defectos, 4), \"\\n\")\n\n\nP(&gt; 3 defectos): 0.0159 \n\n\nVisualización de la distribución binomial\n\n\nCódigo\nggplot(calidad_data[1:8, ], aes(x = Defectos, y = Probabilidad)) +\n  geom_col(fill = \"darkgreen\", alpha = 0.7, width = 0.8) +\n  geom_text(aes(label = round(Probabilidad, 4)), vjust = -0.5, size = 3) +\n  geom_vline(xintercept = media_defectos, color = \"red\", linetype = \"dashed\", size = 1) +\n  annotate(\"text\", x = media_defectos + 1.2, y = max(prob_defectos) * 0.6, \n           label = paste(\"Media =\", media_defectos), color = \"red\") +\n  scale_x_continuous(breaks = 0:7) +\n  labs(title = paste(\"Distribución Binomial(\", n_articulos, \",\", p_defecto, \")\"),\n       subtitle = \"Control de calidad - Artículos defectuosos\",\n       x = \"Número de Artículos Defectuosos\",\n       y = \"Probabilidad\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5))\n\n\n\n\n\nDistribución Binomial - Control de calidad",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Distribuciones Bernoulli y Binomial</span>"
    ]
  },
  {
    "objectID": "bernoulli_binomial.html#comparación-efecto-de-los-parámetros",
    "href": "bernoulli_binomial.html#comparación-efecto-de-los-parámetros",
    "title": "3  Distribuciones Bernoulli y Binomial",
    "section": "3.7 Comparación: Efecto de los Parámetros",
    "text": "3.7 Comparación: Efecto de los Parámetros\nA continuación, exploramos cómo varía la distribución binomial al modificar los parámetros \\(n\\) y \\(p\\).\n\n3.7.1 Efecto del parámetro n (fijo p = 0.3)\n\n\nCódigo\n# Diferentes valores de n con p fijo\nn_vals &lt;- c(5, 10, 20, 50)\np_fijo &lt;- 0.3\n\n# Crear data frame para comparación\ncomp_n_data &lt;- data.frame()\nfor(n in n_vals) {\n  k_vals &lt;- 0:n\n  probs &lt;- dbinom(k_vals, n, p_fijo)\n  temp_data &lt;- data.frame(\n    n = paste(\"n =\", n),\n    k = k_vals,\n    probabilidad = probs,\n    media = n * p_fijo,\n    varianza = n * p_fijo * (1 - p_fijo)\n  )\n  comp_n_data &lt;- rbind(comp_n_data, temp_data)\n}\n\n# Filtrar para visualización (solo valores con probabilidad &gt; 0.01)\ncomp_n_filtered &lt;- comp_n_data[comp_n_data$probabilidad &gt; 0.01, ]\n\nggplot(comp_n_filtered, aes(x = k, y = probabilidad)) +\n  geom_col(fill = \"purple\", alpha = 0.7, width = 0.8) +\n  facet_wrap(~n, scales = \"free\") +\n  labs(title = paste(\"Efecto del parámetro n (p =\", p_fijo, \")\"),\n       x = \"Número de Éxitos\",\n       y = \"Probabilidad\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\n\n\n\n3.7.2 Efecto del parámetro p (fijo n = 10)\n\n\nCódigo\n# Diferentes valores de p con n fijo\np_vals &lt;- c(0.1, 0.3, 0.5, 0.7, 0.9)\nn_fijo &lt;- 10\n\n# Crear data frame para comparación\ncomp_p_data &lt;- data.frame()\nfor(p in p_vals) {\n  k_vals &lt;- 0:n_fijo\n  probs &lt;- dbinom(k_vals, n_fijo, p)\n  temp_data &lt;- data.frame(\n    p = paste(\"p =\", p),\n    k = k_vals,\n    probabilidad = probs,\n    media = n_fijo * p,\n    varianza = n_fijo * p * (1 - p)\n  )\n  comp_p_data &lt;- rbind(comp_p_data, temp_data)\n}\n\nggplot(comp_p_data, aes(x = k, y = probabilidad)) +\n  geom_col(fill = \"orange\", alpha = 0.7, width = 0.8) +\n  geom_vline(aes(xintercept = media), color = \"blue\", linetype = \"dashed\") +\n  facet_wrap(~p, scales = \"free_y\") +\n  labs(title = paste(\"Efecto del parámetro p (n =\", n_fijo, \")\"),\n       x = \"Número de Éxitos\",\n       y = \"Probabilidad\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\nEfecto del parámetro p en la distribución binomial",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Distribuciones Bernoulli y Binomial</span>"
    ]
  },
  {
    "objectID": "bernoulli_binomial.html#simulación-binomial-y-comparación-con-la-teórica",
    "href": "bernoulli_binomial.html#simulación-binomial-y-comparación-con-la-teórica",
    "title": "3  Distribuciones Bernoulli y Binomial",
    "section": "3.8 Simulación Binomial y Comparación con la Teórica",
    "text": "3.8 Simulación Binomial y Comparación con la Teórica\nSe realiza una simulación de 1000 experimentos de una variable aleatoria con distribución \\(Binomial(n=15, p=0.4)\\) y se comparan las estadísticas observadas (media y varianza) con las teóricas, así como la distribución observada con la teórica.\n\n\nCódigo\nset.seed(456)\nn_trials &lt;- 15\np_sim_bin &lt;- 0.4\nn_sim_bin &lt;- 1000\n\n# Generar datos\ndatos_binomial &lt;- rbinom(n_sim_bin, n_trials, p_sim_bin)\n\n# Calcular estadísticas observadas\nmedia_obs_bin &lt;- mean(datos_binomial)\nvar_obs_bin &lt;- var(datos_binomial)\n\n# Valores teóricos\nmedia_teo_bin &lt;- n_trials * p_sim_bin\nvar_teo_bin &lt;- n_trials * p_sim_bin * (1 - p_sim_bin)\n\ncat(\"Media teórica:\", media_teo_bin, \"| Media observada:\", round(media_obs_bin, 4), \"\\n\")\n\n\nMedia teórica: 6 | Media observada: 6.128 \n\n\nCódigo\ncat(\"Varianza teórica:\", var_teo_bin, \"| Varianza observada:\", round(var_obs_bin, 4), \"\\n\")\n\n\nVarianza teórica: 3.6 | Varianza observada: 3.6092 \n\n\nCódigo\n# Comparar distribuciones\nfreq_obs_bin &lt;- table(datos_binomial) / n_sim_bin\nk_sim &lt;- as.numeric(names(freq_obs_bin))\nfreq_teo_bin &lt;- dbinom(k_sim, n_trials, p_sim_bin)\n\ncomparacion_bin &lt;- data.frame(\n  k = k_sim,\n  Freq_Observada = as.numeric(freq_obs_bin),\n  Prob_Teorica = freq_teo_bin\n)\n\nkable(head(comparacion_bin, 10), \n      caption = \"Comparación frecuencias observadas vs probabilidades teóricas\",\n      digits = 4,\n      col.names = c(\"k\", \"Freq. Observada\", \"Prob. Teórica\")) %&gt;%\n  kable_styling(bootstrap_options = \"striped\")\n\n\n\nComparación frecuencias observadas vs probabilidades teóricas\n\n\nk\nFreq. Observada\nProb. Teórica\n\n\n\n\n0\n0.001\n0.0005\n\n\n1\n0.003\n0.0047\n\n\n2\n0.017\n0.0219\n\n\n3\n0.059\n0.0634\n\n\n4\n0.125\n0.1268\n\n\n5\n0.177\n0.1859\n\n\n6\n0.198\n0.2066\n\n\n7\n0.170\n0.1771\n\n\n8\n0.142\n0.1181\n\n\n9\n0.074\n0.0612\n\n\n\n\n\n\n\nVisualización comparativa\n\n\nCódigo\nlibrary(tidyr)\n\n# Preparar datos para visualización\ncomp_sim_long &lt;- comparacion_bin %&gt;%\n  pivot_longer(cols = c(Freq_Observada, Prob_Teorica),\n               names_to = \"Tipo\",\n               values_to = \"Probabilidad\") %&gt;%\n  mutate(Tipo = case_when(\n    Tipo == \"Freq_Observada\" ~ \"Simulada\",\n    Tipo == \"Prob_Teorica\" ~ \"Teórica\"\n  ))\n\nggplot(comp_sim_long, aes(x = k, y = Probabilidad, fill = Tipo)) +\n  geom_col(position = \"dodge\", alpha = 0.7) +\n  scale_fill_manual(values = c(\"Teórica\" = \"blue\", \"Simulada\" = \"red\")) +\n  labs(title = paste(\"Comparación: Binomial(\", n_trials, \",\", p_sim_bin, \") - \", n_sim_bin, \"simulaciones\"),\n       x = \"Número de Éxitos\",\n       y = \"Probabilidad/Frecuencia\",\n       fill = \"Distribución\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5),\n        legend.position = \"bottom\")\n\n\n\n\n\nComparación entre distribución teórica y simulada",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Distribuciones Bernoulli y Binomial</span>"
    ]
  },
  {
    "objectID": "bernoulli_binomial.html#relación-entre-bernoulli-y-binomial",
    "href": "bernoulli_binomial.html#relación-entre-bernoulli-y-binomial",
    "title": "3  Distribuciones Bernoulli y Binomial",
    "section": "3.9 Relación entre Bernoulli y Binomial",
    "text": "3.9 Relación entre Bernoulli y Binomial\n\nTeorema 3.1 Si \\(X_1, X_2, \\ldots, X_n\\) son variables aleatorias independientes e idénticamente distribuidas con \\(X_i \\sim \\text{Bernoulli}(p)\\), entonces:\n\\[X = \\sum_{i=1}^{n} X_i \\sim \\text{Binomial}(n,p)\\]\n\nVerificación mediante una simulación\n\n\nCódigo\nset.seed(789)\nn_exp &lt;- 8\np_exp &lt;- 0.6\nn_sim_rel &lt;- 1000\n\n# Método 1: Generar directamente de Binomial\nbinomial_directo &lt;- rbinom(n_sim_rel, n_exp, p_exp)\n\n# Método 2: Sumar n variables Bernoulli independientes\nsuma_bernoulli &lt;- replicate(n_sim_rel, {\n  bernoulli_vars &lt;- rbinom(n_exp, 1, p_exp)\n  sum(bernoulli_vars)\n})\n\n# Comparar distribuciones\ncomparacion_relacion &lt;- data.frame(\n  Binomial_Directo = binomial_directo,\n  Suma_Bernoulli = suma_bernoulli\n)\n\n# Visualización comparativa\ncomp_rel_long &lt;- comparacion_relacion %&gt;%\n  mutate(id = row_number()) %&gt;%\n  pivot_longer(cols = c(Binomial_Directo, Suma_Bernoulli),\n               names_to = \"Metodo\",\n               values_to = \"Valor\")\n\nggplot(comp_rel_long, aes(x = Valor, fill = Metodo)) +\n  geom_histogram(alpha = 0.6, position = \"identity\", bins = n_exp + 1) +\n  scale_fill_manual(values = c(\"Binomial_Directo\" = \"blue\", \"Suma_Bernoulli\" = \"red\")) +\n  labs(title = \"Equivalencia: Binomial vs Suma de Bernoulli\",\n       subtitle = paste(\"n =\", n_exp, \", p =\", p_exp),\n       x = \"Valor\",\n       y = \"Frecuencia\",\n       fill = \"Método\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5),\n        legend.position = \"bottom\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Distribuciones Bernoulli y Binomial</span>"
    ]
  },
  {
    "objectID": "bernoulli_binomial.html#aproximaciones",
    "href": "bernoulli_binomial.html#aproximaciones",
    "title": "3  Distribuciones Bernoulli y Binomial",
    "section": "3.10 Aproximaciones",
    "text": "3.10 Aproximaciones\n\n3.10.1 Aproximación Normal (Teorema del Límite Central)\nCuando \\(n\\) es grande y \\(p\\) no está muy cerca de 0 o 1, la distribución binomial se puede aproximar con una normal:\n\\[\\text{Binomial}(n,p) \\approx \\text{Normal}(np, np(1-p))\\]\nRegla práctica: \\(np \\geq 5\\) y \\(n(1-p) \\geq 5\\)\n\n\nCódigo\n# Parámetros para aproximación normal\nn_aprox &lt;- 50\np_aprox &lt;- 0.4\n\n# Verificar condiciones\ncondicion1 &lt;- n_aprox * p_aprox &gt;= 5\ncondicion2 &lt;- n_aprox * (1 - p_aprox) &gt;= 5\n\ncat(\"Condiciones para aproximación normal:\\n\")\n\n\nCondiciones para aproximación normal:\n\n\nCódigo\ncat(\"np =\", n_aprox * p_aprox, \"≥ 5:\", condicion1, \"\\n\")\n\n\nnp = 20 ≥ 5: TRUE \n\n\nCódigo\ncat(\"n(1-p) =\", n_aprox * (1-p_aprox), \"≥ 5:\", condicion2, \"\\n\")\n\n\nn(1-p) = 30 ≥ 5: TRUE \n\n\nCódigo\nif(condicion1 & condicion2) {\n  # Calcular probabilidades exactas y aproximadas\n  k_aprox &lt;- 0:n_aprox\n  prob_exacta &lt;- dbinom(k_aprox, n_aprox, p_aprox)\n  \n  # Aproximación normal (con corrección de continuidad)\n  media_normal &lt;- n_aprox * p_aprox\n  var_normal &lt;- n_aprox * p_aprox * (1 - p_aprox)\n  sd_normal &lt;- sqrt(var_normal)\n  \n  # Crear data frame para comparación\n  aprox_data &lt;- data.frame(\n    k = k_aprox,\n    Binomial = prob_exacta,\n    Normal = dnorm(k_aprox, media_normal, sd_normal)\n  )\n  \n  # Filtrar valores significativos\n  aprox_filtered &lt;- aprox_data[aprox_data$Binomial &gt; 0.001, ]\n  \n  # Visualización\n  aprox_long &lt;- aprox_filtered %&gt;%\n    pivot_longer(cols = c(Binomial, Normal),\n                 names_to = \"Distribucion\",\n                 values_to = \"Densidad\")\n  \n  ggplot(aprox_long, aes(x = k, y = Densidad, color = Distribucion)) +\n    geom_line(size = 1) +\n    geom_point(size = 2) +\n    scale_color_manual(values = c(\"Binomial\" = \"blue\", \"Normal\" = \"red\")) +\n    labs(title = \"Aproximación Normal a la Binomial\",\n         subtitle = paste(\"Binomial(\", n_aprox, \",\", p_aprox, \") vs Normal(\", media_normal, \",\", round(sd_normal^2, 2), \")\"),\n         x = \"k\",\n         y = \"Densidad de Probabilidad\",\n         color = \"Distribución\") +\n    theme_minimal() +\n    theme(plot.title = element_text(hjust = 0.5),\n          plot.subtitle = element_text(hjust = 0.5),\n          legend.position = \"bottom\")\n}",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Distribuciones Bernoulli y Binomial</span>"
    ]
  },
  {
    "objectID": "bernoulli_binomial.html#aplicaciones-prácticas",
    "href": "bernoulli_binomial.html#aplicaciones-prácticas",
    "title": "3  Distribuciones Bernoulli y Binomial",
    "section": "3.11 Aplicaciones Prácticas",
    "text": "3.11 Aplicaciones Prácticas\n\nEjemplo 3.3 (Medicina - Efectividad de Tratamiento) Un nuevo medicamento tiene una probabilidad de 0.8 de curar una enfermedad. Se prueba en 25 pacientes.\n\n\nCódigo\n# Parámetros\nn_pacientes &lt;- 25\np_cura &lt;- 0.8\n\n# Preguntas de interés\n# 1. ¿Cuál es la probabilidad de que exactamente 20 pacientes se curen?\nprob_20_curas &lt;- dbinom(20, n_pacientes, p_cura)\n\n# 2. ¿Cuál es la probabilidad de que al menos 22 pacientes se curen?\nprob_min_22 &lt;- 1 - pbinom(21, n_pacientes, p_cura)\n\n# 3. ¿Cuál es la probabilidad de que entre 18 y 22 pacientes se curen?\nprob_18_22 &lt;- pbinom(22, n_pacientes, p_cura) - pbinom(17, n_pacientes, p_cura)\n\n# Parámetros estadísticos\nmedia_curas &lt;- n_pacientes * p_cura\nvarianza_curas &lt;- n_pacientes * p_cura * (1 - p_cura)\ndesv_std_curas &lt;- sqrt(varianza_curas)\n\ncat(\"Aplicación Médica - Efectividad del tratamiento:\\n\")\n\n\nAplicación Médica - Efectividad del tratamiento:\n\n\nCódigo\ncat(\"Parámetros: n =\", n_pacientes, \", p =\", p_cura, \"\\n\\n\")\n\n\nParámetros: n = 25 , p = 0.8 \n\n\nCódigo\ncat(\"Estadísticas esperadas:\\n\")\n\n\nEstadísticas esperadas:\n\n\nCódigo\ncat(\"Número esperado de curas:\", media_curas, \"\\n\")\n\n\nNúmero esperado de curas: 20 \n\n\nCódigo\ncat(\"Varianza:\", varianza_curas, \"\\n\")\n\n\nVarianza: 4 \n\n\nCódigo\ncat(\"Desviación estándar:\", round(desv_std_curas, 4), \"\\n\\n\")\n\n\nDesviación estándar: 2 \n\n\nCódigo\ncat(\"Probabilidades de interés:\\n\")\n\n\nProbabilidades de interés:\n\n\nCódigo\ncat(\"P(exactamente 20 curas):\", round(prob_20_curas, 4), \"\\n\")\n\n\nP(exactamente 20 curas): 0.196 \n\n\nCódigo\ncat(\"P(al menos 22 curas):\", round(prob_min_22, 4), \"\\n\")\n\n\nP(al menos 22 curas): 0.234 \n\n\nCódigo\ncat(\"P(entre 18 y 22 curas):\", round(prob_18_22, 4), \"\\n\")\n\n\nP(entre 18 y 22 curas): 0.7927 \n\n\nCódigo\n# Visualización\nk_medicina &lt;- 0:n_pacientes\nprob_medicina &lt;- dbinom(k_medicina, n_pacientes, p_cura)\nmedicina_data &lt;- data.frame(k = k_medicina, probabilidad = prob_medicina)\n\nggplot(medicina_data, aes(x = k, y = probabilidad)) +\n  geom_col(fill = \"darkblue\", alpha = 0.7, width = 0.8) +\n  geom_vline(xintercept = media_curas, color = \"red\", linetype = \"dashed\", size = 1) +\n  geom_vline(xintercept = c(18, 22), color = \"orange\", linetype = \"dotted\", size = 1) +\n  annotate(\"text\", x = media_curas + 1.5, y = max(prob_medicina) * 0.8, \n           label = paste(\"E[X] =\", media_curas), color = \"red\") +\n  annotate(\"rect\", xmin = 18, xmax = 22, ymin = 0, ymax = Inf, \n           alpha = 0.2, fill = \"orange\") +\n  labs(title = \"Distribución del Número de Pacientes Curados\",\n       subtitle = paste(\"Binomial(\", n_pacientes, \",\", p_cura, \")\"),\n       x = \"Número de Pacientes Curados\",\n       y = \"Probabilidad\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\n\n\n3.12 Ejercicios Propuestos\n\n3.12.1 Ejercicios de Bernoulli\n\nEjercicio 3.1 Una máquina produce piezas defectuosas con probabilidad 0.02. Si se define éxito como “pieza defectuosa”:\n\n\n¿Cuál es la probabilidad de obtener una pieza no defectuosa?\n\n\nCalcule la media y varianza de esta distribución\n\n\nSi se inspeccionan 10 piezas independientemente, ¿cuál es la probabilidad de encontrar exactamente 2 defectuosas?\n\n\n\n\nEjercicio 3.2 En un examen de opción múltiple con 4 opciones por pregunta, un estudiante responde al azar:\n\n\nModele como Bernoulli la respuesta a una pregunta\n\n\n¿Cuál es la probabilidad de acertar?\n\n\nCalcule los parámetros estadísticos\n\n\n\n\n\n3.12.2 Ejercicios de Binomial\n\nEjercicio 3.3 Se lanza una moneda 15 veces: - a) ¿Cuál es la probabilidad de obtener exactamente 8 caras? - b) ¿Cuál es la probabilidad de obtener al menos 12 caras? - c) Calcule la media y desviación estándar\n\n\nEjercicio 3.4 Un medicamento tiene efectividad del 85%. Se administra a 20 pacientes: - a) ¿Cuál es la probabilidad de que se curen exactamente 18 pacientes? - b) ¿Cuál es la probabilidad de que se curen entre 15 y 19 pacientes? - c) ¿Cuántos pacientes se espera que se curen?\n\n\nEjercicio 3.5 Demostrar el siguiente teorema y verificarlo mediante simulación.\nSean \\(X\\) y \\(Y\\) dos variables aleatorias independientes con distribución \\(bin(n, p)\\), y \\(bin(m, p)\\), respectivamente. Entonces la variable \\(X+Y\\) tiene distribución \\(bin(n+m, p)\\).",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Distribuciones Bernoulli y Binomial</span>"
    ]
  },
  {
    "objectID": "bernoulli_binomial.html#ejercicios-propuestos",
    "href": "bernoulli_binomial.html#ejercicios-propuestos",
    "title": "3  Distribuciones Bernoulli y Binomial",
    "section": "3.12 Ejercicios Propuestos",
    "text": "3.12 Ejercicios Propuestos\n\n3.12.1 Ejercicios de Bernoulli\n\nEjercicio 3.1 Una máquina produce piezas defectuosas con probabilidad 0.02. Si se define éxito como “pieza defectuosa”:\n\n\n¿Cuál es la probabilidad de obtener una pieza no defectuosa?\n\n\nCalcule la media y varianza de esta distribución\n\n\nSi se inspeccionan 10 piezas independientemente, ¿cuál es la probabilidad de encontrar exactamente 2 defectuosas?\n\n\n\n\nEjercicio 3.2 En un examen de opción múltiple con 4 opciones por pregunta, un estudiante responde al azar:\n\n\nModele como Bernoulli la respuesta a una pregunta\n\n\n¿Cuál es la probabilidad de acertar?\n\n\nCalcule los parámetros estadísticos\n\n\n\n\n\n3.12.2 Ejercicios de Binomial\n\nEjercicio 3.3 Se lanza una moneda 15 veces: - a) ¿Cuál es la probabilidad de obtener exactamente 8 caras? - b) ¿Cuál es la probabilidad de obtener al menos 12 caras? - c) Calcule la media y desviación estándar\n\n\nEjercicio 3.4 Un medicamento tiene efectividad del 85%. Se administra a 20 pacientes: - a) ¿Cuál es la probabilidad de que se curen exactamente 18 pacientes? - b) ¿Cuál es la probabilidad de que se curen entre 15 y 19 pacientes? - c) ¿Cuántos pacientes se espera que se curen?\n\n\nEjercicio 3.5 Demostrar el siguiente teorema y verificarlo mediante simulación.\nSean \\(X\\) y \\(Y\\) dos variables aleatorias independientes con distribución \\(bin(n, p)\\), y \\(bin(m, p)\\), respectivamente. Entonces la variable \\(X+Y\\) tiene distribución \\(bin(n+m, p)\\).",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Distribuciones Bernoulli y Binomial</span>"
    ]
  },
  {
    "objectID": "hipergeometrica.html",
    "href": "hipergeometrica.html",
    "title": "6  Distribución Hipergeométrica",
    "section": "",
    "text": "Código\n# =======================================================\n# CAPÍTULO: Distribución Hipergeométrica - R\n# =======================================================\n\n# --- 1. Parámetros de ejemplo ---\nN &lt;- 20    # Tamaño población\nK &lt;- 7     # Número de éxitos en población\nn &lt;- 5     # Tamaño muestra\n\ncat(\"Parámetros:\\n\")\n\n\nParámetros:\n\n\nCódigo\ncat(\"N =\", N, \"K =\", K, \"n =\", n, \"\\n\\n\")\n\n\nN = 20 K = 7 n = 5 \n\n\nCódigo\n# =======================================================\n# 2. Función de probabilidad (PMF)\n# =======================================================\nk &lt;- 3  # Número de éxitos deseado\nprob_k &lt;- dhyper(k, K, N-K, n)\ncat(\"Probabilidad de exactamente\", k, \"éxitos:\", prob_k, \"\\n\\n\")\n\n\nProbabilidad de exactamente 3 éxitos: 0.1760836 \n\n\nCódigo\n# =======================================================\n# 3. Probabilidades acumuladas\n# =======================================================\n# P(X &lt;= k)\nprob_menor_igual &lt;- phyper(k, K, N-K, n)\ncat(\"Probabilidad de X &lt;=\", k, \":\", prob_menor_igual, \"\\n\")\n\n\nProbabilidad de X &lt;= 3 : 0.9692982 \n\n\nCódigo\n# P(X &gt;= k) = 1 - P(X &lt;= k-1)\nprob_mayor_igual &lt;- 1 - phyper(k-1, K, N-K, n)\ncat(\"Probabilidad de X &gt;=\", k, \":\", prob_mayor_igual, \"\\n\\n\")\n\n\nProbabilidad de X &gt;= 3 : 0.2067853 \n\n\nCódigo\n# =======================================================\n# 4. Media y varianza\n# =======================================================\nmu &lt;- n * K / N\nvarianza &lt;- n * K / N * (N-K)/N * (N-n)/(N-1)\nsigma &lt;- sqrt(varianza)\ncat(\"Media:\", mu, \"Varianza:\", varianza, \"Desviación estándar:\", sigma, \"\\n\\n\")\n\n\nMedia: 1.75 Varianza: 0.8980263 Desviación estándar: 0.9476425 \n\n\nCódigo\n# =======================================================\n# 5. Simulación\n# =======================================================\nset.seed(123)\nn_sim &lt;- 10000\nsim &lt;- rhyper(n_sim, K, N-K, n)\n\n# Frecuencias empíricas\nfreq_emp &lt;- table(sim)/n_sim\ncat(\"Frecuencias empíricas de la simulación:\\n\")\n\n\nFrecuencias empíricas de la simulación:\n\n\nCódigo\nprint(freq_emp)\n\n\nsim\n     0      1      2      3      4      5 \n0.0846 0.3193 0.3943 0.1738 0.0265 0.0015 \n\n\nCódigo\n# Histograma de simulación\nbarplot(freq_emp, col=\"lightblue\", main=\"Distribución Hipergeométrica simulada\",\n        xlab=\"Número de éxitos\", ylab=\"Frecuencia relativa\")\n\n# =======================================================\n# 6. Comparación con Binomial aproximada\n# =======================================================\np_bin &lt;- K / N\npmf_binom &lt;- dbinom(0:n, n, p_bin)\n\n# Superponer binomial\npoints(0:n, pmf_binom, col=\"red\", pch=19)\nlines(0:n, pmf_binom, col=\"red\", lwd=2)\nlegend(\"topright\", legend=c(\"Simulación Hipergeométrica\",\"Binomial aproximada\"),\n       col=c(\"lightblue\",\"red\"), lwd=c(NA,2), pch=c(NA,19), bty=\"n\")\n\n\n\n\n\n\n\n\n\nCódigo\n# =======================================================\n# 7. Ejemplo avanzado: productos defectuosos\n# =======================================================\nN2 &lt;- 50  # tamaño lote\nK2 &lt;- 10  # defectuosos\nn2 &lt;- 8   # inspeccionados\n\n# Probabilidad de exactamente 2 defectuosos\nprob2 &lt;- dhyper(2, K2, N2-K2, n2)\n\n# Media y desviación estándar\nmu2 &lt;- n2*K2/N2\nsigma2 &lt;- sqrt(n2*K2/N2 * (N2-K2)/N2 * (N2-n2)/(N2-1))\n\ncat(\"\\nEjemplo: Productos defectuosos\\n\")\n\n\n\nEjemplo: Productos defectuosos\n\n\nCódigo\ncat(\"Probabilidad de exactamente 2 defectuosos:\", prob2, \"\\n\")\n\n\nProbabilidad de exactamente 2 defectuosos: 0.3217247 \n\n\nCódigo\ncat(\"Media:\", mu2, \"Desviación estándar:\", sigma2, \"\\n\")\n\n\nMedia: 1.6 Desviación estándar: 1.047446",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Distribución Hipergeométrica</span>"
    ]
  }
]